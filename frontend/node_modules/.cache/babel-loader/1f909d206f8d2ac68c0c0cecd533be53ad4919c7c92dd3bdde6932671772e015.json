{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\components\\\\SimpleAIChatPanel.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Flex, Text, Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleAIChatPanel = ({\n  onClose\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTeamWorking, setIsTeamWorking] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      type: 'user',\n      content: input,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTeamWorking(true);\n    try {\n      const response = await fetch('http://localhost:3001/api/ai-team/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          projectContext: {}\n        })\n      });\n      const data = await response.json();\n\n      // Ensure the message content is always a string\n      let messageContent;\n      if (typeof data.message === 'string') {\n        messageContent = data.message;\n      } else if (typeof data.message === 'object' && data.message !== null) {\n        messageContent = JSON.stringify(data.message, null, 2);\n      } else {\n        messageContent = String(data.message || 'No response received');\n      }\n      const assistantMessage = {\n        type: 'assistant',\n        content: messageContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      if (data.findings && Array.isArray(data.findings)) {\n        const findingsMessages = data.findings.map((f, index) => {\n          let findingContent;\n          if (typeof f === 'string') {\n            findingContent = f;\n          } else if (typeof f === 'object' && f !== null) {\n            findingContent = `Finding ${index + 1}:\\n${JSON.stringify(f, null, 2)}`;\n          } else {\n            findingContent = `Finding ${index + 1}: ${String(f)}`;\n          }\n          return {\n            type: 'assistant',\n            content: findingContent,\n            timestamp: new Date()\n          };\n        });\n        setMessages(prev => [...prev, ...findingsMessages]);\n      }\n    } catch (error) {\n      const errorMessage = {\n        type: 'system',\n        content: `Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTeamWorking(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    h: \"100%\",\n    bg: \"gray.900\",\n    children: [\"      \", /*#__PURE__*/_jsxDEV(Flex, {\n      p: 4,\n      borderBottom: \"1px\",\n      borderColor: \"gray.700\",\n      justify: \"space-between\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          color: \"white\",\n          children: \"\\uD83E\\uDD16 AI Team Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"sm\",\n          color: \"gray.400\",\n          mt: 1,\n          children: \"2-3 AI specialists with codebase access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), onClose ? /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"ghost\",\n        color: \"white\",\n        onClick: () => onClose(),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: 1,\n      overflowY: \"auto\",\n      p: 4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px'\n        },\n        children: [\"          \", messages.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          bg: \"gray.800\",\n          borderRadius: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            color: \"gray.300\",\n            textAlign: \"center\",\n            children: \"\\uD83D\\uDC4B Hello! I'm your AI team assistant. Ask me anything about your codebase, and I'll coordinate with our 2-3 AI specialists to help you debug, analyze, or implement features.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : null, messages.map((msg, i) => {\n          const isUser = msg.type === 'user';\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            justify: isUser ? 'flex-end' : 'flex-start',\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              maxW: \"80%\",\n              bg: isUser ? 'blue.600' : 'gray.700',\n              color: \"white\",\n              p: 3,\n              borderRadius: \"lg\",\n              borderTopRightRadius: isUser ? 'sm' : 'lg',\n              borderTopLeftRadius: isUser ? 'lg' : 'sm',\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                whiteSpace: \"pre-wrap\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                color: \"gray.300\",\n                mt: 2,\n                children: msg.timestamp.toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        }), isTeamWorking && /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"gray.700\",\n            p: 3,\n            borderRadius: \"lg\",\n            borderTopLeftRadius: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              fontSize: \"sm\",\n              children: \"\\uD83E\\uDD16 AI team is working...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderTop: \"1px\",\n      borderColor: \"gray.700\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: \"Ask the AI team anything...\",\n          style: {\n            flex: 1,\n            padding: '8px 12px',\n            backgroundColor: '#2D3748',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            outline: 'none'\n          },\n          disabled: isTeamWorking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendMessage,\n          isDisabled: isTeamWorking || !input.trim(),\n          colorScheme: \"blue\",\n          isLoading: isTeamWorking,\n          children: isTeamWorking ? '...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\nexport default SimpleAIChatPanel;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}