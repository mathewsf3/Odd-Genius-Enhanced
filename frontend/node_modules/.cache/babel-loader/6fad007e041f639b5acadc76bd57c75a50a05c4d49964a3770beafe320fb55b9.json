{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\components\\\\common\\\\Loader.tsx\";\nimport React from 'react';\nimport { Box, Center, keyframes, Image, useColorModeValue } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Full-screen loading overlay with animated ring around OddGenius logo\n * GPT-style thinking animation\n */\nconst Loader = ({\n  isOpen,\n  size = \"6rem\",\n  inline = false\n}) => {\n  if (!isOpen) return null;\n\n  // Simple spinning animation that's guaranteed to be visible\n  const spinAnimation = keyframes`\n    0% {\n      transform: rotate(0deg);\n      stroke-dashoffset: 283;\n    }\n    50% {\n      transform: rotate(180deg);\n      stroke-dashoffset: 70;\n    }\n    100% {\n      transform: rotate(360deg);\n      stroke-dashoffset: 283;\n    }\n  `;\n\n  // Pulsing opacity animation\n  const pulseAnimation = keyframes`\n    0% { opacity: 0.4; }\n    50% { opacity: 1; }\n    100% { opacity: 0.4; }\n  `;\n\n  // Brand colors that match our theme\n  const ringColor = useColorModeValue('#3182CE', '#63B3ED'); // blue theme\n  const overlayBg = useColorModeValue('whiteAlpha.900', 'blackAlpha.800');\n  const logoContent = /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    w: size,\n    h: size,\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: \"/logo.svg\",\n      alt: \"OddGenius logo\",\n      w: \"60%\",\n      h: \"60%\",\n      objectFit: \"contain\",\n      position: \"absolute\",\n      top: \"20%\",\n      left: \"20%\",\n      zIndex: 2,\n      css: {\n        animation: `${pulseAnimation} 3s ease-in-out infinite`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 100 100\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"45\",\n        fill: \"none\",\n        stroke: ringColor,\n        strokeWidth: \"3\",\n        opacity: \"0.2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"45\",\n        fill: \"none\",\n        stroke: ringColor,\n        strokeWidth: \"3\",\n        strokeLinecap: \"round\",\n        strokeDasharray: \"283\",\n        strokeDashoffset: \"283\",\n        css: {\n          animation: `${spinAnimation} 2s linear infinite`,\n          transformOrigin: '50% 50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  // Inline version (for buttons, tabs, etc.)\n  if (inline) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      w: \"full\",\n      h: \"full\",\n      p: 4,\n      children: logoContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Full-screen overlay version\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"fixed\",\n    inset: 0,\n    zIndex: 2000,\n    bg: overlayBg,\n    backdropFilter: \"blur(4px)\",\n    \"aria-busy\": \"true\",\n    \"aria-label\": \"Loading...\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      w: \"full\",\n      h: \"full\",\n      children: logoContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\nexport default Loader;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}