{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\components\\\\charts\\\\ROIChart.tsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport { Box, Text, Flex } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Custom tooltip component for better styling\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    const value = payload[0].value;\n    const isPositive = value >= 0;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      bg: \"white\",\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      border: \"1px solid\",\n      borderColor: \"gray.200\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        mb: 1,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: isPositive ? \"green.500\" : \"red.500\",\n        children: [\"ROI: \", isPositive ? '+' : '', value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\nconst ROIChart = ({\n  data,\n  labels\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: \"No ROI data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Determine if data is in object format or simple array format\n  const isObjectFormat = typeof data[0] === 'object';\n\n  // Calculate min and max for better chart display\n  const values = isObjectFormat ? data.map(item => item.value) : data;\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n  const domain = [Math.min(minValue, 0) - 5,\n  // Ensure we show a bit below 0 or the lowest value\n  Math.max(maxValue, 5) + 5 // Ensure we show a bit above the highest value\n  ];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"300px\",\n    w: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: isObjectFormat ? data : data.map((value, index) => ({\n          date: labels ? labels[index] : `Label ${index + 1}`,\n          value\n        })),\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          vertical: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          tick: {\n            fontSize: 12\n          },\n          tickLine: false,\n          axisLine: {\n            stroke: '#E2E8F0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: domain,\n          tick: {\n            fontSize: 12\n          },\n          tickLine: false,\n          axisLine: {\n            stroke: '#E2E8F0'\n          },\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          y: 0,\n          stroke: \"#CBD5E0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          name: \"ROI\",\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#805AD5\",\n          strokeWidth: 2,\n          dot: {\n            stroke: '#805AD5',\n            strokeWidth: 2,\n            r: 4,\n            fill: 'white'\n          },\n          activeDot: {\n            stroke: '#805AD5',\n            strokeWidth: 2,\n            r: 6,\n            fill: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\nexport default ROIChart;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}