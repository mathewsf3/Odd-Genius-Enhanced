{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\pages\\\\SpecialMatch.tsx\";\n// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Container, useColorModeValue, Tabs, TabList, TabPanels, Tab, TabPanel, Flex, Badge, Tooltip, Button, Alert, AlertIcon, AlertTitle, AlertDescription } from '@chakra-ui/react';\nimport Loader from '../components/common/Loader';\nimport axios from 'axios';\n\n// Component imports\nimport CustomHeadToHeadTab from '../components/match/CustomHeadToHeadTab';\nimport CornerTabCustom from '../components/match/CornerTabCustom';\nimport CustomCardsTab from '../components/match/CustomCardsTab';\nimport CustomBTTSTab from '../components/match/CustomBTTSTab';\nimport CustomPlayerStatsTab from '../components/match/CustomPlayerStatsTab';\nimport CustomLeagueTab from '../components/match/CustomLeagueTab';\nimport MatchHeader from '../components/match/MatchHeader';\n\n// Import services\nimport cornerStatsService from '../services/cornerStatsService';\nimport cardStatsService from '../services/cardStatsService';\nimport bttsStatsService from '../services/bttsStatsService';\nimport playerStatsService from '../services/playerStatsService';\nimport leagueService from '../services/leagueService';\nimport teamFormService from '../services/teamFormService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Initial match data structure - will be populated with real data from API\nconst INITIAL_MATCH_DATA = {\n  id: '',\n  homeTeam: {\n    id: '',\n    name: '',\n    logo: ''\n  },\n  awayTeam: {\n    id: '',\n    name: '',\n    logo: ''\n  },\n  league: {\n    id: '',\n    name: '',\n    country: '',\n    logo: ''\n  },\n  date: '',\n  time: '',\n  startTime: '',\n  status: '',\n  venue: '',\n  odds: {\n    home: 0,\n    draw: 0,\n    away: 0\n  },\n  probability: {\n    home: '0%',\n    draw: '0%',\n    away: '0%'\n  },\n  score: {\n    home: 0,\n    away: 0\n  }\n};\nconst SpecialMatch = ({\n  matchId: propMatchId\n}) => {\n  const params = useParams();\n  const matchId = propMatchId || params.id || '1530359';\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [h2hData, setH2hData] = useState(null);\n  const [cornerStatsData, setCornerStatsData] = useState(null);\n  const [cardStatsData, setCardStatsData] = useState(null);\n  const [bttsStatsData, setBttsStatsData] = useState(null);\n  const [playerStatsData, setPlayerStatsData] = useState(null);\n  const [leagueStandingsData, setLeagueStandingsData] = useState(null);\n  const [homeTeamForm, setHomeTeamForm] = useState(null);\n  const [awayTeamForm, setAwayTeamForm] = useState(null);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [gameCount, setGameCount] = useState(10);\n  const [matchData, setMatchData] = useState(INITIAL_MATCH_DATA);\n  const [dataSource, setDataSource] = useState('Unknown');\n  const bgColor = useColorModeValue('white', 'gray.800');\n\n  // Enhanced match data fetching with better unified system support\n  const fetchMatchData = async id => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log(`üîç [SpecialMatch] Fetching match data for ID: ${id}`);\n\n      // Clear all existing data\n      setH2hData(null);\n      setCornerStatsData(null);\n      setCardStatsData(null);\n      setBttsStatsData(null);\n      setPlayerStatsData(null);\n      setLeagueStandingsData(null);\n      setHomeTeamForm(null);\n      setAwayTeamForm(null);\n\n      // Try unified endpoint first\n      let response;\n      try {\n        response = await axios.get(`http://localhost:5000/api/admin/matches/${id}/unified`, {\n          timeout: 15000\n        });\n        console.log('‚úÖ Using unified match endpoint');\n      } catch (unifiedError) {\n        console.log('‚ö†Ô∏è Unified endpoint failed, trying standard endpoint');\n        response = await axios.get(`http://localhost:5000/api/matches/${id}`, {\n          timeout: 15000\n        });\n      }\n      if (response.data && response.data.success && response.data.result) {\n        console.log('‚úÖ Match data received:', response.data);\n        const result = response.data.result;\n        let matchData;\n\n        // Handle different response formats\n        if (result.universal) {\n          var _universal$homeTeam, _universal$homeTeam$i, _universal$homeTeam2, _merged$homeTeam, _universal$homeTeam3, _merged$homeTeam2, _result$allSports, _result$allSports$hom, _result$allSports2, _result$allSports2$ra, _sources$allSports, _sources$allSports$ho, _sources$apiFootball, _sources$apiFootball$, _universal$awayTeam, _universal$awayTeam$i, _universal$awayTeam2, _merged$awayTeam, _universal$awayTeam3, _merged$awayTeam2, _result$allSports3, _result$allSports3$aw, _result$allSports4, _result$allSports4$ra, _sources$allSports2, _sources$allSports2$a, _sources$apiFootball2, _sources$apiFootball3, _universal$league, _universal$league$id, _universal$league2, _merged$league, _universal$league3, _merged$league2, _universal$league4, _merged$league3, _result$allSports5, _result$allSports5$le, _result$allSports6, _result$allSports6$ra, _sources$allSports3, _sources$allSports3$l, _sources$apiFootball4, _sources$apiFootball5, _sources$allSports4, _sources$apiFootball6;\n          // New unified format\n          console.log('üîÑ Processing unified system data');\n          const universal = result.universal;\n          const merged = result.merged || {};\n          const sources = result.sources || {};\n\n          // Determine data source\n          const availableSources = [];\n          if (sources.allSports) availableSources.push('AllSports');\n          if (sources.apiFootball) availableSources.push('API Football');\n          setDataSource(availableSources.join(' + ') || 'Unknown');\n          matchData = {\n            id: universal.id || id,\n            homeTeam: {\n              id: ((_universal$homeTeam = universal.homeTeam) === null || _universal$homeTeam === void 0 ? void 0 : (_universal$homeTeam$i = _universal$homeTeam.id) === null || _universal$homeTeam$i === void 0 ? void 0 : _universal$homeTeam$i.toString()) || '',\n              name: ((_universal$homeTeam2 = universal.homeTeam) === null || _universal$homeTeam2 === void 0 ? void 0 : _universal$homeTeam2.name) || ((_merged$homeTeam = merged.homeTeam) === null || _merged$homeTeam === void 0 ? void 0 : _merged$homeTeam.name) || 'Unknown Team',\n              logo: ((_universal$homeTeam3 = universal.homeTeam) === null || _universal$homeTeam3 === void 0 ? void 0 : _universal$homeTeam3.logo) || ((_merged$homeTeam2 = merged.homeTeam) === null || _merged$homeTeam2 === void 0 ? void 0 : _merged$homeTeam2.logo) || ((_result$allSports = result.allSports) === null || _result$allSports === void 0 ? void 0 : (_result$allSports$hom = _result$allSports.homeTeam) === null || _result$allSports$hom === void 0 ? void 0 : _result$allSports$hom.logo) || ((_result$allSports2 = result.allSports) === null || _result$allSports2 === void 0 ? void 0 : (_result$allSports2$ra = _result$allSports2.rawData) === null || _result$allSports2$ra === void 0 ? void 0 : _result$allSports2$ra.home_team_logo) || ((_sources$allSports = sources.allSports) === null || _sources$allSports === void 0 ? void 0 : (_sources$allSports$ho = _sources$allSports.homeTeam) === null || _sources$allSports$ho === void 0 ? void 0 : _sources$allSports$ho.logo) || ((_sources$apiFootball = sources.apiFootball) === null || _sources$apiFootball === void 0 ? void 0 : (_sources$apiFootball$ = _sources$apiFootball.homeTeam) === null || _sources$apiFootball$ === void 0 ? void 0 : _sources$apiFootball$.logo) || ''\n            },\n            awayTeam: {\n              id: ((_universal$awayTeam = universal.awayTeam) === null || _universal$awayTeam === void 0 ? void 0 : (_universal$awayTeam$i = _universal$awayTeam.id) === null || _universal$awayTeam$i === void 0 ? void 0 : _universal$awayTeam$i.toString()) || '',\n              name: ((_universal$awayTeam2 = universal.awayTeam) === null || _universal$awayTeam2 === void 0 ? void 0 : _universal$awayTeam2.name) || ((_merged$awayTeam = merged.awayTeam) === null || _merged$awayTeam === void 0 ? void 0 : _merged$awayTeam.name) || 'Unknown Team',\n              logo: ((_universal$awayTeam3 = universal.awayTeam) === null || _universal$awayTeam3 === void 0 ? void 0 : _universal$awayTeam3.logo) || ((_merged$awayTeam2 = merged.awayTeam) === null || _merged$awayTeam2 === void 0 ? void 0 : _merged$awayTeam2.logo) || ((_result$allSports3 = result.allSports) === null || _result$allSports3 === void 0 ? void 0 : (_result$allSports3$aw = _result$allSports3.awayTeam) === null || _result$allSports3$aw === void 0 ? void 0 : _result$allSports3$aw.logo) || ((_result$allSports4 = result.allSports) === null || _result$allSports4 === void 0 ? void 0 : (_result$allSports4$ra = _result$allSports4.rawData) === null || _result$allSports4$ra === void 0 ? void 0 : _result$allSports4$ra.away_team_logo) || ((_sources$allSports2 = sources.allSports) === null || _sources$allSports2 === void 0 ? void 0 : (_sources$allSports2$a = _sources$allSports2.awayTeam) === null || _sources$allSports2$a === void 0 ? void 0 : _sources$allSports2$a.logo) || ((_sources$apiFootball2 = sources.apiFootball) === null || _sources$apiFootball2 === void 0 ? void 0 : (_sources$apiFootball3 = _sources$apiFootball2.awayTeam) === null || _sources$apiFootball3 === void 0 ? void 0 : _sources$apiFootball3.logo) || ''\n            },\n            league: {\n              id: ((_universal$league = universal.league) === null || _universal$league === void 0 ? void 0 : (_universal$league$id = _universal$league.id) === null || _universal$league$id === void 0 ? void 0 : _universal$league$id.toString()) || '',\n              name: ((_universal$league2 = universal.league) === null || _universal$league2 === void 0 ? void 0 : _universal$league2.name) || ((_merged$league = merged.league) === null || _merged$league === void 0 ? void 0 : _merged$league.name) || 'Unknown League',\n              country: ((_universal$league3 = universal.league) === null || _universal$league3 === void 0 ? void 0 : _universal$league3.country) || ((_merged$league2 = merged.league) === null || _merged$league2 === void 0 ? void 0 : _merged$league2.country) || '',\n              logo: ((_universal$league4 = universal.league) === null || _universal$league4 === void 0 ? void 0 : _universal$league4.logo) || ((_merged$league3 = merged.league) === null || _merged$league3 === void 0 ? void 0 : _merged$league3.logo) || ((_result$allSports5 = result.allSports) === null || _result$allSports5 === void 0 ? void 0 : (_result$allSports5$le = _result$allSports5.league) === null || _result$allSports5$le === void 0 ? void 0 : _result$allSports5$le.logo) || ((_result$allSports6 = result.allSports) === null || _result$allSports6 === void 0 ? void 0 : (_result$allSports6$ra = _result$allSports6.rawData) === null || _result$allSports6$ra === void 0 ? void 0 : _result$allSports6$ra.league_logo) || ((_sources$allSports3 = sources.allSports) === null || _sources$allSports3 === void 0 ? void 0 : (_sources$allSports3$l = _sources$allSports3.league) === null || _sources$allSports3$l === void 0 ? void 0 : _sources$allSports3$l.logo) || ((_sources$apiFootball4 = sources.apiFootball) === null || _sources$apiFootball4 === void 0 ? void 0 : (_sources$apiFootball5 = _sources$apiFootball4.league) === null || _sources$apiFootball5 === void 0 ? void 0 : _sources$apiFootball5.logo) || ''\n            },\n            date: universal.date || merged.date || new Date().toISOString().split('T')[0],\n            time: merged.time || universal.time || '',\n            startTime: `${universal.date || merged.date}T${merged.time || '00:00'}:00`,\n            status: merged.status || universal.status || 'NS',\n            venue: merged.venue || ((_sources$allSports4 = sources.allSports) === null || _sources$allSports4 === void 0 ? void 0 : _sources$allSports4.venue) || ((_sources$apiFootball6 = sources.apiFootball) === null || _sources$apiFootball6 === void 0 ? void 0 : _sources$apiFootball6.venue) || '',\n            odds: merged.odds || {\n              home: 0,\n              draw: 0,\n              away: 0\n            },\n            probability: merged.probability || {\n              home: '0%',\n              draw: '0%',\n              away: '0%'\n            },\n            score: merged.score || {\n              home: 0,\n              away: 0\n            }\n          };\n\n          // Store the full result for reference\n          matchData._raw = result;\n        } else {\n          var _result$homeTeam, _result$homeTeam$id, _result$home_team_key, _result$homeTeam2, _result$homeTeam3, _result$awayTeam, _result$awayTeam$id, _result$away_team_key, _result$awayTeam2, _result$awayTeam3, _result$league, _result$league$id, _result$league_key, _result$league2, _result$league3, _result$league4, _result$score, _result$event_final_r, _result$score2, _result$event_final_r2;\n          // Legacy format or direct API response\n          console.log('üîÑ Processing standard format data');\n          setDataSource('AllSports API');\n          matchData = {\n            id: result.id || id,\n            homeTeam: {\n              id: ((_result$homeTeam = result.homeTeam) === null || _result$homeTeam === void 0 ? void 0 : (_result$homeTeam$id = _result$homeTeam.id) === null || _result$homeTeam$id === void 0 ? void 0 : _result$homeTeam$id.toString()) || ((_result$home_team_key = result.home_team_key) === null || _result$home_team_key === void 0 ? void 0 : _result$home_team_key.toString()) || '',\n              name: ((_result$homeTeam2 = result.homeTeam) === null || _result$homeTeam2 === void 0 ? void 0 : _result$homeTeam2.name) || result.event_home_team || 'Unknown Team',\n              logo: ((_result$homeTeam3 = result.homeTeam) === null || _result$homeTeam3 === void 0 ? void 0 : _result$homeTeam3.logo) || result.home_team_logo || ''\n            },\n            awayTeam: {\n              id: ((_result$awayTeam = result.awayTeam) === null || _result$awayTeam === void 0 ? void 0 : (_result$awayTeam$id = _result$awayTeam.id) === null || _result$awayTeam$id === void 0 ? void 0 : _result$awayTeam$id.toString()) || ((_result$away_team_key = result.away_team_key) === null || _result$away_team_key === void 0 ? void 0 : _result$away_team_key.toString()) || '',\n              name: ((_result$awayTeam2 = result.awayTeam) === null || _result$awayTeam2 === void 0 ? void 0 : _result$awayTeam2.name) || result.event_away_team || 'Unknown Team',\n              logo: ((_result$awayTeam3 = result.awayTeam) === null || _result$awayTeam3 === void 0 ? void 0 : _result$awayTeam3.logo) || result.away_team_logo || ''\n            },\n            league: {\n              id: ((_result$league = result.league) === null || _result$league === void 0 ? void 0 : (_result$league$id = _result$league.id) === null || _result$league$id === void 0 ? void 0 : _result$league$id.toString()) || ((_result$league_key = result.league_key) === null || _result$league_key === void 0 ? void 0 : _result$league_key.toString()) || '',\n              name: ((_result$league2 = result.league) === null || _result$league2 === void 0 ? void 0 : _result$league2.name) || result.league_name || 'Unknown League',\n              country: ((_result$league3 = result.league) === null || _result$league3 === void 0 ? void 0 : _result$league3.country) || result.country_name || '',\n              logo: ((_result$league4 = result.league) === null || _result$league4 === void 0 ? void 0 : _result$league4.logo) || result.league_logo || ''\n            },\n            date: result.date || result.event_date || new Date().toISOString().split('T')[0],\n            time: result.time || result.event_time || '',\n            startTime: result.startTime || result.event_timestamp || '',\n            status: result.status || result.event_status || 'NS',\n            venue: result.venue || result.event_stadium || '',\n            odds: result.odds || {\n              home: 0,\n              draw: 0,\n              away: 0\n            },\n            probability: result.probability || {\n              home: '0%',\n              draw: '0%',\n              away: '0%'\n            },\n            score: {\n              home: ((_result$score = result.score) === null || _result$score === void 0 ? void 0 : _result$score.home) || parseInt((_result$event_final_r = result.event_final_result) === null || _result$event_final_r === void 0 ? void 0 : _result$event_final_r.split('-')[0]) || 0,\n              away: ((_result$score2 = result.score) === null || _result$score2 === void 0 ? void 0 : _result$score2.away) || parseInt((_result$event_final_r2 = result.event_final_result) === null || _result$event_final_r2 === void 0 ? void 0 : _result$event_final_r2.split('-')[1]) || 0\n            }\n          };\n        }\n        console.log('üìä Final processed match data:', matchData);\n        setMatchData(matchData);\n        setIsLoading(false);\n        return matchData;\n      } else {\n        throw new Error('Invalid response format');\n      }\n    } catch (error) {\n      console.error('‚ùå [SpecialMatch] Error fetching match data:', error);\n      let errorMessage = `Unable to load match data for ID: ${id}.`;\n      if (axios.isAxiosError(error)) {\n        var _error$response, _error$response2;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n          errorMessage = 'Match not found. Please check the match ID or select a different match.';\n        } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 500) {\n          errorMessage = 'Server error. Please try again later.';\n        } else if (error.code === 'ECONNABORTED') {\n          errorMessage = 'Request timeout. Please check your connection.';\n        }\n      }\n      setError(errorMessage);\n      setIsLoading(false);\n      return null;\n    }\n  };\n\n  // Enhanced H2H fetching with better error handling\n  const fetchH2HData = async () => {\n    try {\n      var _response$data;\n      console.log('üîç Fetching H2H data for match:', matchData);\n\n      // Extract team IDs - handle different formats\n      let homeTeamId = matchData.homeTeam.id;\n      let awayTeamId = matchData.awayTeam.id;\n\n      // Remove prefixes if present\n      homeTeamId = homeTeamId.replace(/^team-/, '');\n      awayTeamId = awayTeamId.replace(/^team-/, '');\n\n      // Check if we have valid IDs\n      if (!homeTeamId || !awayTeamId || homeTeamId === '0' || awayTeamId === '0') {\n        console.warn('‚ö†Ô∏è Invalid team IDs for H2H:', {\n          homeTeamId,\n          awayTeamId\n        });\n        setH2hData(null);\n        return;\n      }\n      console.log(`üìä Fetching H2H for teams: ${homeTeamId} vs ${awayTeamId}`);\n      const response = await axios.get(`http://localhost:5000/api/matches/${matchId}/h2h`, {\n        timeout: 15000\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success && response.data.result) {\n        var _h2hData$matches;\n        const h2hData = response.data.result;\n        console.log('‚úÖ H2H data received:', h2hData);\n\n        // Validate H2H data structure\n        console.log('üîç H2H Data Structure Check:', {\n          hasMatches: !!h2hData.matches,\n          matchesLength: ((_h2hData$matches = h2hData.matches) === null || _h2hData$matches === void 0 ? void 0 : _h2hData$matches.length) || 0,\n          hasSummary: !!h2hData.summary,\n          summaryKeys: h2hData.summary ? Object.keys(h2hData.summary) : [],\n          allKeys: Object.keys(h2hData)\n        });\n        if (h2hData.matches && h2hData.summary) {\n          setH2hData(h2hData);\n          console.log(`‚úÖ Processed ${h2hData.matches.length} H2H matches`);\n        } else {\n          console.warn('‚ö†Ô∏è Invalid H2H data structure - missing matches or summary');\n          console.warn('Missing:', {\n            matches: !h2hData.matches,\n            summary: !h2hData.summary\n          });\n          setH2hData(null);\n        }\n      } else {\n        console.warn('‚ö†Ô∏è No H2H data in response');\n        setH2hData(null);\n      }\n    } catch (error) {\n      console.error('‚ùå Error fetching H2H data:', error);\n      // Don't set error state for H2H failures - just show no data\n      setH2hData(null);\n    }\n  };\n\n  // Fetch corner stats data\n  const fetchCornerStatsData = async (count = gameCount) => {\n    try {\n      console.log(`üîç Fetching corner stats for ${count} games`);\n      if (count !== gameCount) {\n        setCornerStatsData(null);\n      }\n      const data = await cornerStatsService.fetchCornerStats(matchId, count);\n      console.log('‚úÖ Corner stats received:', data);\n      if (count !== gameCount) {\n        setGameCount(count);\n      }\n      setCornerStatsData(data);\n      return data;\n    } catch (err) {\n      console.error('‚ùå Error fetching corner stats:', err);\n      setCornerStatsData(null);\n      throw err;\n    }\n  };\n\n  // Fetch card stats data\n  const fetchCardStatsData = async (count = gameCount) => {\n    try {\n      console.log(`üîç Fetching card stats for ${count} games`);\n      if (count !== gameCount) {\n        setCardStatsData(null);\n      }\n      const data = await cardStatsService.fetchCardStats(matchId, count);\n      console.log('‚úÖ Card stats received:', data);\n      if (count !== gameCount) {\n        setGameCount(count);\n      }\n      setCardStatsData(data);\n      return data;\n    } catch (err) {\n      console.error('‚ùå Error fetching card stats:', err);\n      setCardStatsData(null);\n      throw err;\n    }\n  };\n\n  // Fetch BTTS stats data\n  const fetchBTTSStatsData = async (count = gameCount) => {\n    try {\n      console.log(`üîç Fetching BTTS stats for ${count} games`);\n      setBttsStatsData(null);\n      const data = await bttsStatsService.fetchBTTSStats(matchId, count);\n      console.log('‚úÖ BTTS stats received:', data);\n      if (count !== gameCount) {\n        setGameCount(count);\n      }\n      setBttsStatsData(data);\n      return data;\n    } catch (err) {\n      console.error('‚ùå Error fetching BTTS stats:', err);\n      setBttsStatsData(null);\n      throw err;\n    }\n  };\n\n  // Fetch player stats data\n  const fetchPlayerStatsData = async (count = gameCount) => {\n    try {\n      console.log(`üîç Fetching player stats for ${count} games`);\n      setPlayerStatsData(null);\n      const data = await playerStatsService.fetchPlayerStatsForMatch(matchId, count);\n      console.log('‚úÖ Player stats received:', data);\n      if (count !== gameCount) {\n        setGameCount(count);\n      }\n      setPlayerStatsData(data);\n      return data;\n    } catch (err) {\n      console.error('‚ùå Error fetching player stats:', err);\n      setPlayerStatsData(null);\n      throw err;\n    }\n  };\n\n  // Fetch team form data\n  const fetchTeamFormData = async () => {\n    try {\n      console.log('üîç Fetching team form data');\n      setHomeTeamForm(null);\n      setAwayTeamForm(null);\n\n      // Extract clean team IDs\n      const homeTeamId = matchData.homeTeam.id.replace(/^team-/, '');\n      const awayTeamId = matchData.awayTeam.id.replace(/^team-/, '');\n\n      // Validate IDs\n      if (!homeTeamId || !awayTeamId || homeTeamId === '0' || awayTeamId === '0') {\n        console.warn('‚ö†Ô∏è Invalid team IDs for form data');\n        return;\n      }\n      const formData = await teamFormService.fetchMatchTeamsForm(homeTeamId, matchData.homeTeam.name, awayTeamId, matchData.awayTeam.name);\n      console.log('‚úÖ Team form data received:', formData);\n      setHomeTeamForm(formData.homeTeamForm);\n      setAwayTeamForm(formData.awayTeamForm);\n      return formData;\n    } catch (err) {\n      console.error('‚ùå Error fetching team form:', err);\n      setHomeTeamForm(null);\n      setAwayTeamForm(null);\n      throw err;\n    }\n  };\n\n  // Fetch league standings data\n  const fetchLeagueStandingsData = async () => {\n    try {\n      console.log('üîç Fetching league standings');\n      setLeagueStandingsData(null);\n      const leagueId = matchData.league.id;\n      const homeTeamId = matchData.homeTeam.id.replace(/^team-/, '');\n      const awayTeamId = matchData.awayTeam.id.replace(/^team-/, '');\n      if (!leagueId || leagueId === '0') {\n        console.warn('‚ö†Ô∏è Invalid league ID');\n        return;\n      }\n      const data = await leagueService.fetchLeagueStandings(leagueId, homeTeamId, awayTeamId, matchData.id);\n      console.log('‚úÖ League standings received:', data);\n      setLeagueStandingsData(data);\n      return data;\n    } catch (err) {\n      console.error('‚ùå Error fetching league standings:', err);\n      setLeagueStandingsData(null);\n      throw err;\n    }\n  };\n\n  // Fetch all statistics when match data is ready\n  useEffect(() => {\n    if (matchData.homeTeam.id && matchData.awayTeam.id && matchData.homeTeam.id !== '' && matchData.awayTeam.id !== '') {\n      console.log('üìä Match data ready, fetching all statistics...');\n\n      // Fetch all data with error handling for each\n      fetchH2HData().catch(console.error);\n      fetchCornerStatsData().catch(console.error);\n      fetchCardStatsData().catch(console.error);\n      fetchBTTSStatsData().catch(console.error);\n      fetchPlayerStatsData().catch(console.error);\n      fetchLeagueStandingsData().catch(console.error);\n      fetchTeamFormData().catch(console.error);\n    }\n  }, [matchData.homeTeam.id, matchData.awayTeam.id]);\n\n  // Handle game count changes\n  useEffect(() => {\n    const handleGameCountChange = e => {\n      const newGameCount = e.detail.gameCount;\n      console.log(`üìä Game count changed to ${newGameCount}`);\n      setGameCount(newGameCount);\n\n      // Clear and refetch data\n      setCornerStatsData(null);\n      setCardStatsData(null);\n      setBttsStatsData(null);\n      setPlayerStatsData(null);\n\n      // Refetch with new count\n      fetchCornerStatsData(newGameCount).catch(console.error);\n      fetchCardStatsData(newGameCount).catch(console.error);\n      fetchBTTSStatsData(newGameCount).catch(console.error);\n      fetchPlayerStatsData(newGameCount).catch(console.error);\n    };\n    document.addEventListener('gameCountChange', handleGameCountChange);\n    return () => {\n      document.removeEventListener('gameCountChange', handleGameCountChange);\n    };\n  }, [matchId]); // Include matchId to ensure we're fetching for the right match\n\n  // Fetch match data on mount or ID change\n  useEffect(() => {\n    console.log(`üéØ SpecialMatch mounted with matchId: ${matchId}`);\n    fetchMatchData(matchId);\n  }, [matchId]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      isOpen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      centerContent: true,\n      py: 10,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"error\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error Loading Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: bgColor,\n    minH: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      py: 5,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        bg: bgColor,\n        p: 4,\n        borderRadius: \"md\",\n        boxShadow: \"sm\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(MatchHeader, {\n          match: matchData,\n          homeTeamForm: homeTeamForm,\n          awayTeamForm: awayTeamForm,\n          isLoadingForm: !homeTeamForm && !awayTeamForm && !error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          p: 2,\n          bg: \"blue.50\",\n          borderRadius: \"md\",\n          fontSize: \"sm\",\n          color: \"blue.700\",\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Data Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), \" \", dataSource, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Match ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), \" \", matchData.id, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Updated:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), \" \", new Date().toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              alignItems: \"center\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                colorScheme: \"blue\",\n                fontSize: \"sm\",\n                children: [\"Analyzing: Last \", gameCount, \" matches\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                label: \"Clear all cached data and refresh\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"xs\",\n                  colorScheme: \"blue\",\n                  variant: \"ghost\",\n                  onClick: () => {\n                    // Clear all caches\n                    cornerStatsService.clearCornerStatsCache();\n                    cardStatsService.clearCardStatsCache();\n                    bttsStatsService.clearBTTSStatsCache();\n                    playerStatsService.clearPlayerStatsCache();\n                    leagueService.clearLeagueStandingsCache();\n                    teamFormService.clearAllCache();\n\n                    // Refetch all data\n                    fetchMatchData(matchId);\n                  },\n                  children: \"Reset Cache\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          isFitted: true,\n          variant: \"enclosed\",\n          colorScheme: \"blue\",\n          index: tabIndex,\n          onChange: setTabIndex,\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            mb: \"1em\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"Head to Head\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"Corner Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"Card Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"BTTS Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"Player Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              fontWeight: \"medium\",\n              children: \"League\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n            children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CustomHeadToHeadTab, {\n                match: matchData,\n                data: h2hData,\n                isLoading: false,\n                initialMatchRange: gameCount\n              }, `h2h-${matchId}-${gameCount}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CornerTabCustom, {\n                match: matchData,\n                data: cornerStatsData,\n                isLoading: !cornerStatsData && !error,\n                initialGameCount: gameCount.toString(),\n                onRefresh: fetchCornerStatsData\n              }, `corners-${matchId}-${gameCount}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CustomCardsTab, {\n                match: matchData,\n                data: cardStatsData,\n                isLoading: !cardStatsData && !error,\n                initialGameCount: gameCount.toString(),\n                onRefresh: fetchCardStatsData\n              }, `cards-${matchId}-${gameCount}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CustomBTTSTab, {\n                match: matchData,\n                data: bttsStatsData,\n                isLoading: !bttsStatsData && !error,\n                initialGameCount: gameCount.toString(),\n                onRefresh: fetchBTTSStatsData\n              }, `btts-${matchId}-${gameCount}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CustomPlayerStatsTab, {\n                match: matchData,\n                data: playerStatsData,\n                isLoading: !playerStatsData && !error,\n                initialGameCount: gameCount.toString(),\n                onGameCountChange: count => {\n                  const customEvent = new CustomEvent('gameCountChange', {\n                    detail: {\n                      gameCount: count,\n                      requiresRefetch: true\n                    },\n                    bubbles: true\n                  });\n                  document.dispatchEvent(customEvent);\n                },\n                onRefresh: fetchPlayerStatsData\n              }, `players-${matchId}-${gameCount}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              p: 0,\n              children: /*#__PURE__*/_jsxDEV(CustomLeagueTab, {\n                match: matchData,\n                data: leagueStandingsData,\n                isLoading: !leagueStandingsData && !error,\n                onRefresh: fetchLeagueStandingsData\n              }, `league-${matchId}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 547,\n    columnNumber: 5\n  }, this);\n};\nexport default SpecialMatch;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}