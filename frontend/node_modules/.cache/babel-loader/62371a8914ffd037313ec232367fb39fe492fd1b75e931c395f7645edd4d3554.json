{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\components\\\\match\\\\PlayerStatsTabFooty.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, VStack, HStack, Text, Heading, Badge, Button, SimpleGrid, useColorModeValue, Icon, Flex, Alert, AlertIcon, Spinner, Avatar } from '@chakra-ui/react';\nimport { FiUsers, FiRefreshCw, FiStar, FiActivity } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerStatsTabFooty = ({\n  match,\n  gameCount,\n  onGameCountChange\n}) => {\n  var _match$league;\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [matchData, setMatchData] = useState(null);\n  const [homePlayersData, setHomePlayersData] = useState([]);\n  const [awayPlayersData, setAwayPlayersData] = useState([]);\n  const [isLoadingPlayerStats, setIsLoadingPlayerStats] = useState(false);\n\n  // Color mode values\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const cardBg = useColorModeValue('gray.50', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n  const textColor = useColorModeValue('gray.600', 'gray.400');\n  const headingColor = useColorModeValue('gray.800', 'white');\n  const accentBlue = useColorModeValue('blue.500', 'blue.300');\n\n  // Fetch comprehensive player statistics\n  const fetchPlayerStats = async () => {\n    if (!match.id) return;\n    setIsLoadingPlayerStats(true);\n    try {\n      // Get match data with lineups\n      const matchResponse = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/footystats/match/${match.id}`);\n      if (matchResponse.ok) {\n        const matchResult = await matchResponse.json();\n        if (matchResult.success) {\n          var _matchResult$data$lin, _matchResult$data$lin2, _matchResult$data$lin3, _matchResult$data$lin4;\n          setMatchData(matchResult.data);\n\n          // Extract player IDs from lineups\n          const homePlayerIds = ((_matchResult$data$lin = matchResult.data.lineups) === null || _matchResult$data$lin === void 0 ? void 0 : (_matchResult$data$lin2 = _matchResult$data$lin.team_a) === null || _matchResult$data$lin2 === void 0 ? void 0 : _matchResult$data$lin2.map(p => p.player_id)) || [];\n          const awayPlayerIds = ((_matchResult$data$lin3 = matchResult.data.lineups) === null || _matchResult$data$lin3 === void 0 ? void 0 : (_matchResult$data$lin4 = _matchResult$data$lin3.team_b) === null || _matchResult$data$lin4 === void 0 ? void 0 : _matchResult$data$lin4.map(p => p.player_id)) || [];\n\n          // Fetch detailed player statistics\n          const homePlayersPromises = homePlayerIds.slice(0, 11).map(playerId => fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/footystats/player/${playerId}`).then(res => res.ok ? res.json() : null).catch(() => null));\n          const awayPlayersPromises = awayPlayerIds.slice(0, 11).map(playerId => fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/footystats/player/${playerId}`).then(res => res.ok ? res.json() : null).catch(() => null));\n          const [homePlayersResults, awayPlayersResults] = await Promise.all([Promise.all(homePlayersPromises), Promise.all(awayPlayersPromises)]);\n\n          // Filter successful responses and extract current season data\n          const homePlayersFiltered = homePlayersResults.filter(result => {\n            var _result$data;\n            return (result === null || result === void 0 ? void 0 : result.success) && (result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.length) > 0;\n          }).map(result => {\n            const playerData = result.data.find(season => season.league_type === 'Domestic League' && season.season === '2024/2025') || result.data[0];\n            return playerData;\n          }).filter(Boolean);\n          const awayPlayersFiltered = awayPlayersResults.filter(result => {\n            var _result$data2;\n            return (result === null || result === void 0 ? void 0 : result.success) && (result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.length) > 0;\n          }).map(result => {\n            const playerData = result.data.find(season => season.league_type === 'Domestic League' && season.season === '2024/2025') || result.data[0];\n            return playerData;\n          }).filter(Boolean);\n          setHomePlayersData(homePlayersFiltered);\n          setAwayPlayersData(awayPlayersFiltered);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching player stats:', error);\n    } finally {\n      setIsLoadingPlayerStats(false);\n    }\n  };\n\n  // Load player stats on component mount\n  useEffect(() => {\n    fetchPlayerStats();\n  }, [match.id, (_match$league = match.league) === null || _match$league === void 0 ? void 0 : _match$league.id]);\n\n  // Handle refresh\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    await fetchPlayerStats();\n    setTimeout(() => setIsRefreshing(false), 1000);\n  };\n\n  // Render game count selector\n  const renderGameCountSelector = () => /*#__PURE__*/_jsxDEV(Box, {\n    mb: 6,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      align: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        color: headingColor,\n        children: \"Player Statistics Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          as: FiRefreshCw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this),\n        onClick: handleRefresh,\n        isLoading: isRefreshing,\n        size: \"sm\",\n        variant: \"outline\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"sm\",\n      color: textColor,\n      mb: 4,\n      children: \"Comprehensive player analysis including lineups, key players, and performance metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 2,\n      children: [5, 10, 15, 20].map(count => /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: gameCount === count ? 'solid' : 'outline',\n        colorScheme: \"blue\",\n        onClick: () => onGameCountChange(count),\n        children: [\"Last \", count]\n      }, count, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n\n  // Render lineups from FootyStats match data\n  const renderLineups = () => {\n    if (!(matchData !== null && matchData !== void 0 && matchData.lineups)) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"info\",\n        borderRadius: \"lg\",\n        mb: 6,\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: \"Lineups Not Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            children: isLoadingPlayerStats ? 'Loading player lineups...' : 'Player lineups are not available for this match.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this);\n    }\n    const homeLineup = matchData.lineups.team_a || [];\n    const awayLineup = matchData.lineups.team_b || [];\n    return /*#__PURE__*/_jsxDEV(Box, {\n      bg: cardBg,\n      p: 6,\n      borderRadius: \"xl\",\n      border: \"1px solid\",\n      borderColor: borderColor,\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: FiUsers,\n          color: accentBlue,\n          mr: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          color: headingColor,\n          children: \"Starting Lineups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: {\n          base: 1,\n          md: 2\n        },\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"md\",\n              src: match.homeTeam.logo,\n              name: match.homeTeam.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              color: headingColor,\n              children: match.homeTeam.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: homeLineup.map((player, index) => {\n              var _player$player_events, _player$player_events2;\n              const playerStats = homePlayersData.find(p => p.id === player.player_id);\n              const hasGoal = (_player$player_events = player.player_events) === null || _player$player_events === void 0 ? void 0 : _player$player_events.some(event => event.event_type === 'Goal');\n              const hasCard = (_player$player_events2 = player.player_events) === null || _player$player_events2 === void 0 ? void 0 : _player$player_events2.some(event => event.event_type === 'Yellow' || event.event_type === 'Red');\n              return /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                p: 3,\n                bg: bgColor,\n                borderRadius: \"lg\",\n                mb: 2,\n                border: \"1px solid\",\n                borderColor: borderColor,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  size: \"sm\",\n                  name: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.full_name) || `Player ${player.shirt_number}`,\n                  mr: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  flex: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    fontWeight: \"bold\",\n                    color: headingColor,\n                    children: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.full_name) || `Player ${player.shirt_number}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    color: textColor,\n                    children: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.position) || 'Unknown Position'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this), playerStats && /*#__PURE__*/_jsxDEV(HStack, {\n                    spacing: 2,\n                    mt: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"green.500\",\n                      children: [playerStats.goals_overall || 0, \"G\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"blue.500\",\n                      children: [playerStats.assists_overall || 0, \"A\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"yellow.500\",\n                      children: [playerStats.yellow_cards_overall || 0, \"Y\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(VStack, {\n                  spacing: 1,\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"blue\",\n                    size: \"sm\",\n                    children: [\"#\", player.shirt_number]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), hasGoal && /*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"green\",\n                    size: \"sm\",\n                    children: \"\\u26BD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 35\n                  }, this), hasCard && /*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"yellow\",\n                    size: \"sm\",\n                    children: \"\\uD83D\\uDCCB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"md\",\n              src: match.awayTeam.logo,\n              name: match.awayTeam.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              color: headingColor,\n              children: match.awayTeam.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            children: awayLineup.map((player, index) => {\n              var _player$player_events3, _player$player_events4;\n              const playerStats = awayPlayersData.find(p => p.id === player.player_id);\n              const hasGoal = (_player$player_events3 = player.player_events) === null || _player$player_events3 === void 0 ? void 0 : _player$player_events3.some(event => event.event_type === 'Goal');\n              const hasCard = (_player$player_events4 = player.player_events) === null || _player$player_events4 === void 0 ? void 0 : _player$player_events4.some(event => event.event_type === 'Yellow' || event.event_type === 'Red');\n              return /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                p: 3,\n                bg: bgColor,\n                borderRadius: \"lg\",\n                mb: 2,\n                border: \"1px solid\",\n                borderColor: borderColor,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  size: \"sm\",\n                  name: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.full_name) || `Player ${player.shirt_number}`,\n                  mr: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  flex: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    fontWeight: \"bold\",\n                    color: headingColor,\n                    children: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.full_name) || `Player ${player.shirt_number}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    color: textColor,\n                    children: (playerStats === null || playerStats === void 0 ? void 0 : playerStats.position) || 'Unknown Position'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this), playerStats && /*#__PURE__*/_jsxDEV(HStack, {\n                    spacing: 2,\n                    mt: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"green.500\",\n                      children: [playerStats.goals_overall || 0, \"G\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"blue.500\",\n                      children: [playerStats.assists_overall || 0, \"A\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"yellow.500\",\n                      children: [playerStats.yellow_cards_overall || 0, \"Y\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(VStack, {\n                  spacing: 1,\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"red\",\n                    size: \"sm\",\n                    children: [\"#\", player.shirt_number]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), hasGoal && /*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"green\",\n                    size: \"sm\",\n                    children: \"\\u26BD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 35\n                  }, this), hasCard && /*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"yellow\",\n                    size: \"sm\",\n                    children: \"\\uD83D\\uDCCB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render enhanced player analysis\n  const renderEnhancedPlayerAnalysis = () => {\n    if (!playerStats && !leaguePlayers) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        bg: cardBg,\n        p: 6,\n        borderRadius: \"xl\",\n        border: \"1px solid\",\n        borderColor: borderColor,\n        mb: 6,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: FiActivity,\n            color: accentBlue,\n            mr: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            color: headingColor,\n            children: \"Enhanced Player Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), isLoadingPlayerStats ? /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"center\",\n          py: 8,\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"lg\",\n              color: \"blue.500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: textColor,\n              children: \"Loading comprehensive player statistics...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              children: \"Enhanced Player Statistics Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              children: \"Comprehensive player statistics will be displayed here once loaded.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Box, {\n      bg: cardBg,\n      p: 6,\n      borderRadius: \"xl\",\n      border: \"1px solid\",\n      borderColor: borderColor,\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: FiStar,\n          color: accentBlue,\n          mr: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          color: headingColor,\n          children: \"Key Player Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"sm\",\n        color: textColor,\n        mb: 4,\n        children: \"Player performance data and key statistics for both teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"success\",\n        borderRadius: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: \"Player Data Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            children: \"Enhanced player statistics are being processed and will be displayed shortly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 6,\n    align: \"stretch\",\n    children: [renderGameCountSelector(), renderLineups(), renderEnhancedPlayerAnalysis()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n};\nexport default PlayerStatsTabFooty;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}