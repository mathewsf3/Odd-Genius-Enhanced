{"ast":null,"code":"import React,{useState}from'react';import{Box,Flex,Text,Heading,Stat,StatLabel,StatNumber,StatHelpText,SimpleGrid,VStack,HStack,Badge,Table,Thead,Tbody,Tr,Th,Td,Icon,Spinner,Center,Button,Tabs,TabList,Tab,useColorModeValue,Tooltip,keyframes}from'@chakra-ui/react';import{FiAlertCircle,FiRefreshCw,FiClock,FiUsers,FiBarChart2,FiTrendingUp}from'react-icons/fi';import{BsCardText}from'react-icons/bs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomCardsTab=_ref=>{let{match,data,isLoading,initialGameCount=\"10\",onRefresh}=_ref;const[gameCount,setGameCount]=useState(initialGameCount);const[isRefreshing,setIsRefreshing]=useState(false);// Enhanced debug console logs\nconsole.log(\"CustomCardsTab rendered with data:\",data,\"gameCount:\",gameCount);// Handle refresh button click\nconst handleRefresh=async()=>{if(onRefresh){setIsRefreshing(true);try{await onRefresh(parseInt(gameCount));}catch(error){console.error(\"Error refreshing card stats:\",error);}finally{setIsRefreshing(false);}}};// Color mode values\nconst bgColor=useColorModeValue('gray.50','gray.900');const cardBg=useColorModeValue('white','gray.800');const statBg=useColorModeValue('gray.50','gray.700');const borderColor=useColorModeValue('gray.200','gray.700');const accentRed=useColorModeValue('red.500','red.300');const accentYellow=useColorModeValue('yellow.500','yellow.300');const textColor=useColorModeValue('gray.800','white');// Animation keyframes\nconst pulseAnimation=keyframes`\n    0% { opacity: 0.3; }\n    50% { opacity: 0.7; }\n    100% { opacity: 0.3; }\n  `;const pulse=`${pulseAnimation} 2s infinite`;const subtleGlow=useColorModeValue('0 0 15px rgba(66, 153, 225, 0.5)','0 0 15px rgba(99, 179, 237, 0.5)');// Helper functions\nconst calculatePercentage=(value,total)=>{if(total===0)return\"0%\";return`${Math.round(value/total*100)}%`;};// Get confidence level with fixed thresholds: HIGH ≥70%, MEDIUM 40-69%, LOW <40%\nconst getConfidenceLevel=function(percentage){let hasValidData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// If we don't have valid data, return \"No Data\"\nif(!hasValidData||percentage===0&&!hasValidData){return\"No Data\";}// Fixed confidence thresholds\nif(percentage>=70)return\"HIGH\";// ≥70%\nif(percentage>=40)return\"MEDIUM\";// 40-69%\nreturn\"LOW\";// <40%\n};// Get appropriate color for confidence level\nconst getConfidenceColor=confidence=>{switch(confidence){case\"LOW\":return\"red\";case\"MEDIUM\":return\"orange\";case\"HIGH\":return\"green\";case\"No Data\":return\"gray\";default:return\"gray\";}};// Get prediction based on percentage (OVER probability)\nconst getPrediction=function(percentage){let hasValidData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// If we don't have valid data, return \"No Data\"\nif(!hasValidData||percentage===0&&!hasValidData){return\"NO DATA\";}if(percentage>55)return\"OVER\";if(percentage<45)return\"UNDER\";return\"PUSH\";};// Get a clear explanation of the prediction\nconst getPredictionExplanation=function(percentage){let hasValidData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// If we don't have valid data, return appropriate message\nif(!hasValidData||percentage===0&&!hasValidData){return\"Insufficient data for prediction\";}if(percentage>55){return`${percentage}% chance of OVER`;}else if(percentage<45){return`${100-percentage}% chance of UNDER`;}else{return\"50/50 chance\";}};// If loading or no data, show loading spinner\nif(isLoading||isRefreshing){return/*#__PURE__*/_jsx(Center,{p:8,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsx(Spinner,{size:\"xl\",color:\"blue.500\",thickness:\"4px\",speed:\"0.8s\"}),/*#__PURE__*/_jsx(Text,{color:\"gray.500\",fontWeight:\"medium\",children:isRefreshing?\"Refreshing card statistics...\":\"Loading card statistics...\"})]})});}// If no data, show error message\nif(!data){return/*#__PURE__*/_jsx(Box,{p:4,bg:bgColor,borderRadius:\"md\",borderWidth:\"1px\",borderColor:borderColor,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"center\",py:8,children:[/*#__PURE__*/_jsx(Icon,{as:FiAlertCircle,boxSize:\"48px\",color:\"gray.400\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"No Card Statistics Available\"}),/*#__PURE__*/_jsxs(Text,{align:\"center\",color:\"gray.500\",children:[\"We were unable to retrieve card statistics for this match.\",/*#__PURE__*/_jsx(\"br\",{}),\"This could be because the API data is currently unavailable.\"]}),onRefresh&&/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(FiRefreshCw,{}),colorScheme:\"blue\",size:\"md\",onClick:()=>handleRefresh(),isLoading:isRefreshing,mt:4,children:\"Retry\"})]})});}// Log that we're using real API data\nconsole.log(`CustomCardsTab: Using REAL API data from backend`);console.log(`CustomCardsTab: Card stats data:`,data);// Extract data for easier access\nconst{homeStats,awayStats,combinedStats}=data;// Debug the over rates specifically\nconsole.log(`CustomCardsTab: Combined over rates:`,combinedStats.overRates);console.log(`CustomCardsTab: Home over rates:`,homeStats.overRates);console.log(`CustomCardsTab: Away over rates:`,awayStats.overRates);console.log(`CustomCardsTab: Expected cards: ${combinedStats.averageCardsPerMatch}`);// Check if we have valid statistical data\nconst hasValidData=combinedStats.averageCardsPerMatch>0&&(combinedStats.overRates[\"3.5\"]>0||combinedStats.overRates[\"4.5\"]>0||combinedStats.overRates[\"5.5\"]>0);// Render the card statistics overview\nreturn/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",mb:6,position:\"relative\",children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",mb:4,children:\"Card Analysis Range\"}),/*#__PURE__*/_jsxs(Text,{mb:4,children:[\"Showing last \",gameCount,\" matches\"]}),/*#__PURE__*/_jsx(Tabs,{variant:\"soft-rounded\",colorScheme:\"red\",size:\"sm\",index:gameCount===\"5\"?0:1,onChange:index=>{const newCount=index===0?\"5\":\"10\";setGameCount(newCount);// Trigger data refresh event\nconst customEvent=new CustomEvent('gameCountChange',{detail:{gameCount:parseInt(newCount)},bubbles:true});document.dispatchEvent(customEvent);console.log(`Dispatched gameCountChange event with count: ${newCount}`);},children:/*#__PURE__*/_jsxs(TabList,{children:[/*#__PURE__*/_jsx(Tab,{fontWeight:\"medium\",_selected:{color:'white',bg:accentRed,boxShadow:subtleGlow},px:4,children:\"Last 5 Matches\"}),/*#__PURE__*/_jsx(Tab,{fontWeight:\"medium\",_selected:{color:'white',bg:accentRed,boxShadow:subtleGlow},px:4,children:\"Last 10 Matches\"})]})})]}),/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",mb:6,position:\"relative\",children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",mb:4,children:[/*#__PURE__*/_jsx(Icon,{as:BsCardText,color:accentRed,mr:2,boxSize:\"24px\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Card Statistics Overview\"})]}),/*#__PURE__*/_jsxs(SimpleGrid,{columns:{base:1,md:3},spacing:4,children:[/*#__PURE__*/_jsxs(Stat,{p:3,bg:statBg,borderRadius:\"lg\",boxShadow:\"sm\",position:\"relative\",overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Box,{position:\"absolute\",top:\"-20px\",right:\"-20px\",bg:\"red.50\",w:\"80px\",h:\"80px\",borderRadius:\"full\",opacity:\"0.4\"}),/*#__PURE__*/_jsxs(StatLabel,{children:[\"Cards Per Match (\",match.homeTeam.name,\")\"]}),/*#__PURE__*/_jsx(StatNumber,{children:homeStats.averageCardsPerMatch.toFixed(1)}),/*#__PURE__*/_jsx(StatHelpText,{children:/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsxs(Badge,{colorScheme:\"yellow\",children:[homeStats.totalYellowCards,\" Yellow\"]}),/*#__PURE__*/_jsxs(Badge,{colorScheme:\"red\",children:[homeStats.totalRedCards,\" Red\"]})]})})]}),/*#__PURE__*/_jsxs(Stat,{p:3,bg:statBg,borderRadius:\"lg\",boxShadow:\"sm\",position:\"relative\",overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Box,{position:\"absolute\",top:\"-20px\",right:\"-20px\",bg:\"red.50\",w:\"80px\",h:\"80px\",borderRadius:\"full\",opacity:\"0.4\"}),/*#__PURE__*/_jsxs(StatLabel,{children:[\"Cards Per Match (\",match.awayTeam.name,\")\"]}),/*#__PURE__*/_jsx(StatNumber,{children:awayStats.averageCardsPerMatch.toFixed(1)}),/*#__PURE__*/_jsx(StatHelpText,{children:/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsxs(Badge,{colorScheme:\"yellow\",children:[awayStats.totalYellowCards,\" Yellow\"]}),/*#__PURE__*/_jsxs(Badge,{colorScheme:\"red\",children:[awayStats.totalRedCards,\" Red\"]})]})})]}),/*#__PURE__*/_jsxs(Stat,{p:3,bg:statBg,borderRadius:\"lg\",boxShadow:\"sm\",position:\"relative\",overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Box,{position:\"absolute\",top:\"-20px\",right:\"-20px\",bg:\"red.50\",w:\"80px\",h:\"80px\",borderRadius:\"full\",opacity:\"0.4\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Expected Cards per Match\"}),/*#__PURE__*/_jsx(StatNumber,{children:combinedStats.averageCardsPerMatch.toFixed(1)}),/*#__PURE__*/_jsx(StatHelpText,{children:/*#__PURE__*/_jsx(Tooltip,{label:`Based on last ${gameCount} matches for each team`,placement:\"top\",children:/*#__PURE__*/_jsxs(Text,{cursor:\"help\",children:[match.homeTeam.name,\": \",homeStats.averageCardsPerMatch.toFixed(1),\" | \",match.awayTeam.name,\": \",awayStats.averageCardsPerMatch.toFixed(1)]})})})]})]})]}),/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",mb:6,children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",mb:4,children:[/*#__PURE__*/_jsx(Icon,{as:FiClock,color:accentRed,mr:2,boxSize:\"24px\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Cards by Time Period\"})]}),/*#__PURE__*/_jsx(SimpleGrid,{columns:{base:2,md:6},spacing:4,children:Object.entries(combinedStats.cardsByPeriod).map(_ref2=>{let[period,count]=_ref2;const homeCount=homeStats.cardsByPeriod[period];const awayCount=awayStats.cardsByPeriod[period];return/*#__PURE__*/_jsx(Tooltip,{label:`${match.homeTeam.name}: ${homeCount} | ${match.awayTeam.name}: ${awayCount}`,placement:\"top\",children:/*#__PURE__*/_jsxs(Box,{p:3,bg:statBg,borderRadius:\"lg\",boxShadow:\"sm\",textAlign:\"center\",cursor:\"help\",children:[/*#__PURE__*/_jsxs(Badge,{colorScheme:\"red\",mb:2,children:[period,\" min\"]}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:count}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.500\",children:\"cards\"}),/*#__PURE__*/_jsxs(Flex,{justify:\"center\",mt:2,children:[/*#__PURE__*/_jsx(Box,{w:\"15px\",h:`${Math.max(15,homeCount/Math.max(1,count)*50)}px`,bg:\"red.400\",borderRadius:\"sm\",mr:1}),/*#__PURE__*/_jsx(Box,{w:\"15px\",h:`${Math.max(15,awayCount/Math.max(1,count)*50)}px`,bg:\"red.600\",borderRadius:\"sm\"})]}),/*#__PURE__*/_jsxs(Flex,{justify:\"space-between\",mt:1,px:1,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",children:homeCount}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",children:awayCount})]})]})},period);})})]}),/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",mb:6,children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",mb:4,children:[/*#__PURE__*/_jsx(Icon,{as:FiUsers,color:accentRed,mr:2,boxSize:\"24px\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Most Carded Players\"})]}),/*#__PURE__*/_jsxs(SimpleGrid,{columns:{base:1,md:2},spacing:6,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:3,children:match.homeTeam.name}),/*#__PURE__*/_jsxs(Table,{variant:\"simple\",size:\"sm\",children:[/*#__PURE__*/_jsx(Thead,{children:/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Th,{children:\"Player\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Yellow\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Red\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Total\"})]})}),/*#__PURE__*/_jsx(Tbody,{children:homeStats.mostCardedPlayers.map(player=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:player.playerName}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:/*#__PURE__*/_jsx(Badge,{colorScheme:\"yellow\",children:player.yellowCards})}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:/*#__PURE__*/_jsx(Badge,{colorScheme:\"red\",children:player.redCards})}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:player.totalCards})]},player.playerId))})]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:3,children:match.awayTeam.name}),/*#__PURE__*/_jsxs(Table,{variant:\"simple\",size:\"sm\",children:[/*#__PURE__*/_jsx(Thead,{children:/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Th,{children:\"Player\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Yellow\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Red\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Total\"})]})}),/*#__PURE__*/_jsx(Tbody,{children:awayStats.mostCardedPlayers.map(player=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:player.playerName}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:/*#__PURE__*/_jsx(Badge,{colorScheme:\"yellow\",children:player.yellowCards})}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:/*#__PURE__*/_jsx(Badge,{colorScheme:\"red\",children:player.redCards})}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:player.totalCards})]},player.playerId))})]})]})]})]}),/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",mb:6,children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",mb:4,children:[/*#__PURE__*/_jsx(Icon,{as:FiBarChart2,color:accentRed,mr:2,boxSize:\"24px\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Card Over/Under Predictions\"})]}),/*#__PURE__*/_jsxs(SimpleGrid,{columns:{base:1,md:3},spacing:4,children:[/*#__PURE__*/_jsxs(Box,{p:4,borderWidth:\"1px\",borderRadius:\"lg\",borderColor:borderColor,children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:3,children:\"Over 3.5 Cards\"}),/*#__PURE__*/_jsxs(Heading,{size:\"xl\",color:accentRed,mb:2,children:[Math.round(combinedStats.overRates[\"3.5\"]),\"%\"]}),/*#__PURE__*/_jsx(Tooltip,{label:\"Confidence levels: HIGH \\u226570%, MEDIUM 40-69%, LOW <40%\",placement:\"top\",children:/*#__PURE__*/_jsxs(Badge,{colorScheme:getConfidenceColor(getConfidenceLevel(combinedStats.overRates[\"3.5\"],hasValidData)),mb:2,cursor:\"help\",children:[getConfidenceLevel(combinedStats.overRates[\"3.5\"],hasValidData),\" Confidence\"]})}),/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[\"Prediction: \",getPrediction(combinedStats.overRates[\"3.5\"],hasValidData)]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",mt:1,children:getPredictionExplanation(combinedStats.overRates[\"3.5\"],hasValidData)}),/*#__PURE__*/_jsx(Tooltip,{label:`Historical = % of matches with >3.5 cards from last ${gameCount} matches`,placement:\"top\",children:/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.500\",mt:2,cursor:\"help\",children:[\"Based on last \",gameCount,\" matches\"]})})]}),/*#__PURE__*/_jsxs(Box,{p:4,borderWidth:\"1px\",borderRadius:\"lg\",borderColor:borderColor,children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:3,children:\"Over 4.5 Cards\"}),/*#__PURE__*/_jsxs(Heading,{size:\"xl\",color:accentRed,mb:2,children:[Math.round(combinedStats.overRates[\"4.5\"]),\"%\"]}),/*#__PURE__*/_jsxs(Badge,{colorScheme:getConfidenceColor(getConfidenceLevel(combinedStats.overRates[\"4.5\"],hasValidData)),mb:2,children:[getConfidenceLevel(combinedStats.overRates[\"4.5\"],hasValidData),\" Confidence\"]}),/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[\"Prediction: \",getPrediction(combinedStats.overRates[\"4.5\"],hasValidData)]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",mt:1,children:getPredictionExplanation(combinedStats.overRates[\"4.5\"],hasValidData)}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.500\",mt:2,children:[\"Based on last \",gameCount,\" matches\"]})]}),/*#__PURE__*/_jsxs(Box,{p:4,borderWidth:\"1px\",borderRadius:\"lg\",borderColor:borderColor,children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:3,children:\"Over 5.5 Cards\"}),/*#__PURE__*/_jsxs(Heading,{size:\"xl\",color:accentRed,mb:2,children:[Math.round(combinedStats.overRates[\"5.5\"]),\"%\"]}),/*#__PURE__*/_jsxs(Badge,{colorScheme:getConfidenceColor(getConfidenceLevel(combinedStats.overRates[\"5.5\"],hasValidData)),mb:2,children:[getConfidenceLevel(combinedStats.overRates[\"5.5\"],hasValidData),\" Confidence\"]}),/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[\"Prediction: \",getPrediction(combinedStats.overRates[\"5.5\"],hasValidData)]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",mt:1,children:getPredictionExplanation(combinedStats.overRates[\"5.5\"],hasValidData)}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.500\",mt:2,children:[\"Based on last \",gameCount,\" matches\"]})]})]})]}),/*#__PURE__*/_jsxs(Box,{bg:cardBg,p:4,borderRadius:\"md\",boxShadow:\"sm\",children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",mb:4,children:[/*#__PURE__*/_jsx(Icon,{as:FiTrendingUp,color:accentRed,mr:2,boxSize:\"24px\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Team Card Comparison\"})]}),/*#__PURE__*/_jsxs(Table,{variant:\"simple\",size:\"md\",children:[/*#__PURE__*/_jsx(Thead,{children:/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Th,{children:\"Team\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Yellow/Match\"}),(homeStats.totalRedCards>0||awayStats.totalRedCards>0)&&/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Red/Match\"}),/*#__PURE__*/_jsx(Th,{isNumeric:true,children:\"Total/Match\"})]})}),/*#__PURE__*/_jsxs(Tbody,{children:[/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:match.homeTeam.name}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:homeStats.averageYellowCardsPerMatch.toFixed(1)}),(homeStats.totalRedCards>0||awayStats.totalRedCards>0)&&/*#__PURE__*/_jsx(Td,{isNumeric:true,children:homeStats.averageRedCardsPerMatch.toFixed(1)}),/*#__PURE__*/_jsx(Td,{isNumeric:true,fontWeight:\"bold\",children:homeStats.averageCardsPerMatch.toFixed(1)})]}),/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:match.awayTeam.name}),/*#__PURE__*/_jsx(Td,{isNumeric:true,children:awayStats.averageYellowCardsPerMatch.toFixed(1)}),(homeStats.totalRedCards>0||awayStats.totalRedCards>0)&&/*#__PURE__*/_jsx(Td,{isNumeric:true,children:awayStats.averageRedCardsPerMatch.toFixed(1)}),/*#__PURE__*/_jsx(Td,{isNumeric:true,fontWeight:\"bold\",children:awayStats.averageCardsPerMatch.toFixed(1)})]})]})]})]})]});};export default CustomCardsTab;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}