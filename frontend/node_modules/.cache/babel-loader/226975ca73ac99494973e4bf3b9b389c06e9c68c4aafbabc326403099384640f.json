{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\components\\\\AITeamDashboard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Text, Input, Button, Grid, Badge, VStack, HStack, Spinner, useToast, Progress, List, ListItem, Icon } from '@chakra-ui/react';\nimport { io } from 'socket.io-client';\nimport { FiUser, FiCode, FiDatabase, FiSettings, FiEye, FiCpu } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AITeamDashboard = () => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [agents, setAgents] = useState([]);\n  const [fileChanges, setFileChanges] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const toast = useToast();\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    // Connect to AI team server port\n    const AI_TEAM_URL = process.env.REACT_APP_AI_TEAM_URL || 'http://localhost:3002';\n    const newSocket = io(AI_TEAM_URL, {\n      path: '/socket.io/',\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('🔗 Connected to AI Team WebSocket');\n      setConnected(true);\n\n      // Request initial agent status\n      newSocket.emit('get-agents');\n      toast({\n        title: 'Connected to AI Team',\n        description: 'Real-time monitoring active',\n        status: 'success',\n        duration: 3000\n      });\n    });\n    newSocket.on('disconnect', () => {\n      console.log('❌ Disconnected from AI Team WebSocket');\n      setConnected(false);\n    });\n\n    // Listen for team status (initial state)\n    newSocket.on('team-status', data => {\n      console.log('📊 Received team status:', data);\n      if (data.agents && Array.isArray(data.agents)) {\n        setAgents(data.agents);\n      }\n    });\n\n    // Listen for agents status response\n    newSocket.on('agents-status', data => {\n      console.log('🤖 Received agents status:', data);\n      if (Array.isArray(data)) {\n        setAgents(data);\n      }\n    });\n\n    // Listen for leader responses\n    newSocket.on('leader-response', response => {\n      var _response$result;\n      console.log('🎯 Leader response:', response);\n      const content = response.leaderMessage || ((_response$result = response.result) === null || _response$result === void 0 ? void 0 : _response$result.leaderMessage) || response.message || 'Processing complete';\n      setChatHistory(prev => [...prev, {\n        role: 'leader',\n        content: content,\n        timestamp: new Date().toISOString(),\n        requestId: response.requestId\n      }]);\n      setIsProcessing(false);\n    });\n\n    // Listen for task assignments\n    newSocket.on('task-assigned', data => {\n      var _data$task;\n      console.log('📤 Task assigned:', data);\n      const taskDescription = ((_data$task = data.task) === null || _data$task === void 0 ? void 0 : _data$task.description) || data.task || 'Unknown task';\n      const taskString = typeof taskDescription === 'string' ? taskDescription : JSON.stringify(taskDescription);\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `📤 Task assigned to ${data.agentId}: ${taskString.substring(0, 100)}...`,\n        timestamp: new Date().toISOString()\n      }]);\n\n      // Update agent status\n      setAgents(prev => prev.map(agent => agent.id === data.agentId ? {\n        ...agent,\n        status: 'working',\n        currentTask: taskString.substring(0, 50)\n      } : agent));\n    });\n\n    // Listen for task completions\n    newSocket.on('task-completed', data => {\n      var _data$result, _data$result2, _data$result3, _data$result4;\n      console.log('✅ Task completed:', data);\n\n      // Show detailed completion message with real work done\n      const actualChanges = ((_data$result = data.result) === null || _data$result === void 0 ? void 0 : _data$result.actualChanges) || [];\n      const claudeResponse = ((_data$result2 = data.result) === null || _data$result2 === void 0 ? void 0 : _data$result2.claudeResponse) || '';\n      const completionMessage = ((_data$result3 = data.result) === null || _data$result3 === void 0 ? void 0 : _data$result3.message) || `${data.agentId} completed task successfully`;\n      const filesModified = ((_data$result4 = data.result) === null || _data$result4 === void 0 ? void 0 : _data$result4.filesModified) || [];\n\n      // Show Claude's actual response\n      if (claudeResponse) {\n        setChatHistory(prev => [...prev, {\n          role: 'assistant',\n          content: `**${data.agentId} Agent Response:**\\n\\n${claudeResponse.substring(0, 500)}${claudeResponse.length > 500 ? '...' : ''}`,\n          timestamp: new Date().toISOString(),\n          agentId: data.agentId\n        }]);\n      }\n\n      // Show completion with actual work done\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `✅ **TASK COMPLETED** - ${data.agentId} agent: ${completionMessage}${actualChanges.length > 0 ? `\\n\\n📁 **Files Modified:**\\n${actualChanges.map(change => `• ${change.file}: ${change.action}`).join('\\n')}` : ''}`,\n        timestamp: new Date().toISOString()\n      }]);\n\n      // Update agent status\n      setAgents(prev => prev.map(agent => agent.id === data.agentId ? {\n        ...agent,\n        status: 'idle',\n        currentTask: null,\n        completedTasks: (agent.completedTasks || 0) + 1\n      } : agent));\n\n      // Show actual file changes\n      if (actualChanges.length > 0) {\n        actualChanges.forEach(change => {\n          setFileChanges(prev => [{\n            id: Date.now() + Math.random(),\n            agent: data.agentId,\n            action: 'saved',\n            file: change.file,\n            timestamp: new Date().toISOString(),\n            preview: change.action\n          }, ...prev.slice(0, 19)]);\n        });\n      }\n    });\n\n    // Listen for agent status changes\n    newSocket.on('agent-status-changed', data => {\n      console.log('🤖 Agent status changed:', data);\n      setAgents(prev => prev.map(agent => agent.id === data.agentId ? {\n        ...agent,\n        ...data\n      } : agent));\n    });\n\n    // Listen for agent progress\n    newSocket.on('agent-progress', data => {\n      console.log('🔄 Agent progress:', data);\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `🔄 ${data.agentId}: ${data.message || 'Working...'}`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n\n    // Listen for file changes\n    newSocket.on('file-changed', change => {\n      console.log('📝 File change:', change);\n      setFileChanges(prev => [{\n        id: Date.now(),\n        agent: change.agent || 'system',\n        action: change.action || 'modified',\n        file: change.path || change.file || 'unknown',\n        timestamp: new Date().toISOString(),\n        preview: change.preview\n      }, ...prev.slice(0, 19)]);\n    });\n\n    // Listen for enhanced events\n    newSocket.on('codebase-indexed', data => {\n      console.log('🔍 Codebase indexed:', data);\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `🔍 Codebase indexing completed - ${data.fileCount} files indexed in ${data.indexingTime}ms`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('quality-assurance-completed', data => {\n      console.log('🔍 Quality assurance completed:', data);\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `🔍 Quality assurance completed - API documentation reviewed: ${data.apiDocumentationReviewed}`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('triple-testing-completed', data => {\n      console.log('🧪 Triple testing completed:', data);\n      const testResults = `Unit: ${data.testingPhases.unit ? '✅' : '❌'}, Integration: ${data.testingPhases.integration ? '✅' : '❌'}, E2E: ${data.testingPhases.endToEnd ? '✅' : '❌'}`;\n      setChatHistory(prev => [...prev, {\n        role: 'system',\n        content: `🧪 Triple-testing completed - ${testResults}`,\n        timestamp: new Date().toISOString()\n      }]);\n\n      // Show completion notification if all tests passed\n      if (data.allTestsPassed) {\n        setChatHistory(prev => [...prev, {\n          role: 'system',\n          content: `🎉 TASK COMPLETED SUCCESSFULLY! All agents have finished their work and all tests are passing. The implementation is ready to use.`,\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    });\n\n    // Listen for errors\n    newSocket.on('error', error => {\n      console.error('❌ AI Team error:', error);\n      toast({\n        title: 'AI Team Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000\n      });\n      setIsProcessing(false);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, [toast]);\n\n  // Send message to team leader\n  const sendMessage = () => {\n    if (!socket || !message.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    setIsProcessing(true);\n    socket.emit('chat-message', {\n      message: message.trim(),\n      context: {}\n    });\n    setMessage('');\n  };\n\n  // Handle Enter key\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Get agent icon\n  const getAgentIcon = specialty => {\n    if (specialty.includes('Frontend')) return FiCode;\n    if (specialty.includes('Backend')) return FiCpu;\n    if (specialty.includes('Database')) return FiDatabase;\n    if (specialty.includes('Testing')) return FiSettings;\n    return FiUser;\n  };\n\n  // Get status color\n  const getStatusColor = status => {\n    switch (status) {\n      case 'working':\n        return 'blue';\n      case 'error':\n        return 'red';\n      default:\n        return 'green';\n    }\n  };\n\n  // Format timestamp\n  const formatTime = timestamp => {\n    try {\n      const date = typeof timestamp === 'string' ? new Date(timestamp) : timestamp;\n      if (isNaN(date.getTime())) {\n        return new Date().toLocaleTimeString();\n      }\n      return date.toLocaleTimeString();\n    } catch {\n      return new Date().toLocaleTimeString();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100vh\",\n    bg: \"gray.900\",\n    color: \"white\",\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"400px 1fr\",\n      templateRows: \"1fr 300px\",\n      gap: 4,\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        bg: \"gray.800\",\n        border: \"1px solid\",\n        borderColor: \"gray.700\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          borderBottom: \"1px solid\",\n          borderColor: \"gray.700\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              as: FiEye,\n              color: \"purple.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              children: \"Team Leader (Claude Opus)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              colorScheme: connected ? 'green' : 'red',\n              children: connected ? 'Connected' : 'Disconnected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            h: \"100%\",\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              flex: 1,\n              w: \"100%\",\n              overflowY: \"auto\",\n              bg: \"gray.900\",\n              p: 3,\n              borderRadius: \"md\",\n              maxH: \"400px\",\n              css: {\n                '&::-webkit-scrollbar': {\n                  width: '8px'\n                },\n                '&::-webkit-scrollbar-track': {\n                  background: '#2D3748'\n                },\n                '&::-webkit-scrollbar-thumb': {\n                  background: '#4A5568',\n                  borderRadius: '4px'\n                }\n              },\n              children: [chatHistory.map((msg, i) => /*#__PURE__*/_jsxDEV(Box, {\n                mb: 3,\n                children: [/*#__PURE__*/_jsxDEV(HStack, {\n                  mb: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    fontWeight: \"bold\",\n                    color: msg.role === 'user' ? 'blue.400' : msg.role === 'system' ? 'green.400' : 'purple.400',\n                    children: msg.role === 'user' ? 'You' : msg.role === 'system' ? 'System' : 'Team Leader'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    color: \"gray.500\",\n                    children: formatTime(msg.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  whiteSpace: \"pre-wrap\",\n                  wordBreak: \"break-word\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)), isProcessing && /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  size: \"sm\",\n                  color: \"purple.400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.400\",\n                  children: \"Team Leader is analyzing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              w: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: message,\n                onChange: e => setMessage(e.target.value),\n                onKeyDown: handleKeyDown,\n                placeholder: \"Describe what you want to build...\",\n                bg: \"gray.700\",\n                border: \"none\",\n                _focus: {\n                  bg: 'gray.600'\n                },\n                disabled: !connected || isProcessing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: sendMessage,\n                colorScheme: \"purple\",\n                disabled: !connected || !message.trim() || isProcessing,\n                isLoading: isProcessing,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"gray.800\",\n        border: \"1px solid\",\n        borderColor: \"gray.700\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          borderBottom: \"1px solid\",\n          borderColor: \"gray.700\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Sonnet Agent Specialists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(2, 1fr)\",\n            gap: 4,\n            children: agents.map(agent => /*#__PURE__*/_jsxDEV(Box, {\n              bg: \"gray.700\",\n              border: \"2px solid\",\n              borderColor: `${getStatusColor(agent.status)}.500`,\n              borderRadius: \"md\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                children: /*#__PURE__*/_jsxDEV(VStack, {\n                  align: \"start\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(HStack, {\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      as: getAgentIcon(agent.specialty),\n                      color: `${getStatusColor(agent.status)}.400`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: \"bold\",\n                      children: agent.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                      colorScheme: getStatusColor(agent.status),\n                      children: agent.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: \"gray.400\",\n                    children: agent.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 23\n                  }, this), agent.currentTask && /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"xs\",\n                      color: \"gray.500\",\n                      children: \"Current Task:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"sm\",\n                      children: agent.currentTask\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    color: \"gray.500\",\n                    children: [\"Completed: \", agent.completedTasks, \" tasks\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 23\n                  }, this), agent.status === 'working' && /*#__PURE__*/_jsxDEV(Progress, {\n                    size: \"sm\",\n                    isIndeterminate: true,\n                    colorScheme: \"blue\",\n                    w: \"100%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)\n            }, agent.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"gray.800\",\n        border: \"1px solid\",\n        borderColor: \"gray.700\",\n        borderRadius: \"md\",\n        gridColumn: \"1 / -1\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          borderBottom: \"1px solid\",\n          borderColor: \"gray.700\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Live File Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            spacing: 2,\n            maxH: \"200px\",\n            overflowY: \"auto\",\n            children: [fileChanges.map(change => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"blue\",\n                    children: change.agent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    children: change.action\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: \"blue.400\",\n                    children: change.file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"xs\",\n                  color: \"gray.500\",\n                  children: formatTime(change.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), change.preview && /*#__PURE__*/_jsxDEV(Box, {\n                mt: 1,\n                p: 2,\n                bg: \"gray.900\",\n                borderRadius: \"md\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"xs\",\n                  fontFamily: \"mono\",\n                  color: \"gray.400\",\n                  children: change.preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 21\n              }, this)]\n            }, change.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)), fileChanges.length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              color: \"gray.500\",\n              textAlign: \"center\",\n              children: \"No recent file activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\nexport default AITeamDashboard;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}