{"ast":null,"code":"import axios from 'axios';\nimport soccerApiService from '../api/soccerApiService';\nclass ChatService {\n  constructor() {\n    this.apiKey = void 0;\n    this.baseUrl = void 0;\n    this.apiKey = process.env.REACT_APP_OPENAI_API_KEY || '';\n    this.baseUrl = 'https://api.openai.com/v1/chat/completions';\n  }\n  isValidSoccerQuery(message) {\n    const soccerKeywords = ['soccer', 'football', 'match', 'team', 'league', 'goal', 'score', 'bet', 'odds', 'statistics', 'analysis', 'prediction', 'premier league', 'champions league', 'la liga', 'serie a', 'bundesliga', 'ligue 1', 'mls', 'world cup', 'euro', 'player', 'coach', 'transfer', 'formation', 'tactics', 'expected goals', 'xg', 'xa', 'possession', 'shots', 'corners', 'cards', 'fouls', 'offside', 'penalty', 'free kick', 'striker', 'midfielder', 'defender', 'goalkeeper', 'arsenal', 'manchester', 'liverpool', 'chelsea', 'barcelona', 'real madrid', 'juventus', 'milan', 'bayern', 'psg', 'atletico', 'tottenham', 'city'];\n    const messageLower = message.toLowerCase();\n    return soccerKeywords.some(keyword => messageLower.includes(keyword));\n  }\n  async getRecentMatchData() {\n    try {\n      // Get live and upcoming matches\n      const [liveMatches, upcomingMatches] = await Promise.all([soccerApiService.getLiveMatches().catch(() => ({\n        result: []\n      })), soccerApiService.getUpcomingMatches().catch(() => ({\n        result: []\n      }))]);\n      const liveData = (liveMatches === null || liveMatches === void 0 ? void 0 : liveMatches.result) || liveMatches || [];\n      const upcomingData = (upcomingMatches === null || upcomingMatches === void 0 ? void 0 : upcomingMatches.result) || upcomingMatches || [];\n\n      // Get next 7 days of matches\n      const now = new Date();\n      const nextWeek = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);\n      const recentMatches = Array.isArray(upcomingData) ? upcomingData.filter(match => {\n        const matchDate = new Date(`${match.date} ${match.time}`);\n        return matchDate >= now && matchDate <= nextWeek;\n      }).slice(0, 20) : [];\n      return {\n        liveMatches: Array.isArray(liveData) ? liveData.slice(0, 10) : [],\n        upcomingMatches: recentMatches,\n        totalLive: Array.isArray(liveData) ? liveData.length : 0,\n        totalUpcoming: recentMatches.length,\n        rawLiveData: liveData,\n        rawUpcomingData: upcomingData\n      };\n    } catch (error) {\n      console.error('Error fetching match data:', error);\n      return {\n        liveMatches: [],\n        upcomingMatches: [],\n        totalLive: 0,\n        totalUpcoming: 0,\n        rawLiveData: [],\n        rawUpcomingData: []\n      };\n    }\n  }\n  async getLeagueData() {\n    try {\n      // Get popular leagues data if available\n      const leagues = ['Premier League', 'Champions League', 'La Liga', 'Serie A', 'Bundesliga', 'Ligue 1'];\n      return {\n        availableLeagues: leagues,\n        note: \"I can provide analysis for major European leagues and competitions\"\n      };\n    } catch (error) {\n      console.error('Error fetching league data:', error);\n      return {\n        availableLeagues: [],\n        note: \"League data temporarily unavailable\"\n      };\n    }\n  }\n  createSystemPrompt(matchData, leagueData) {\n    const liveMatchesInfo = matchData.liveMatches.map(match => {\n      var _match$homeTeam, _match$awayTeam, _match$score, _match$score2, _match$league;\n      return `${(_match$homeTeam = match.homeTeam) === null || _match$homeTeam === void 0 ? void 0 : _match$homeTeam.name} vs ${(_match$awayTeam = match.awayTeam) === null || _match$awayTeam === void 0 ? void 0 : _match$awayTeam.name} (${(_match$score = match.score) === null || _match$score === void 0 ? void 0 : _match$score.home}-${(_match$score2 = match.score) === null || _match$score2 === void 0 ? void 0 : _match$score2.away}, ${match.elapsed}', League: ${(_match$league = match.league) === null || _match$league === void 0 ? void 0 : _match$league.name})`;\n    }).slice(0, 5).join(', ');\n    const upcomingMatchesInfo = matchData.upcomingMatches.map(match => {\n      var _match$homeTeam2, _match$awayTeam2, _match$league2, _match$odds, _match$odds2, _match$odds3;\n      return `${(_match$homeTeam2 = match.homeTeam) === null || _match$homeTeam2 === void 0 ? void 0 : _match$homeTeam2.name} vs ${(_match$awayTeam2 = match.awayTeam) === null || _match$awayTeam2 === void 0 ? void 0 : _match$awayTeam2.name} (${match.date} ${match.time}, League: ${(_match$league2 = match.league) === null || _match$league2 === void 0 ? void 0 : _match$league2.name}, Odds: ${(_match$odds = match.odds) === null || _match$odds === void 0 ? void 0 : _match$odds.home}/${(_match$odds2 = match.odds) === null || _match$odds2 === void 0 ? void 0 : _match$odds2.draw}/${(_match$odds3 = match.odds) === null || _match$odds3 === void 0 ? void 0 : _match$odds3.away})`;\n    }).slice(0, 5).join(', ');\n    return `You are Odd Genius AI, a specialized soccer analytics assistant with access to REAL-TIME data. You help users with:\n\n**CURRENT LIVE MATCHES** (${matchData.totalLive} ongoing):\n${liveMatchesInfo || 'No live matches currently'}\n\n**UPCOMING MATCHES** (Next 7 days - ${matchData.totalUpcoming} matches):\n${upcomingMatchesInfo || 'No upcoming matches in the next 7 days'}\n\n**Your Capabilities:**\n1. **Real-Time Analysis**: Provide insights on the actual live and upcoming matches shown above\n2. **Betting Insights**: Use the real odds data (home/draw/away) for value betting recommendations\n3. **League Analysis**: Analyze patterns from the leagues currently active\n4. **Match Predictions**: Base predictions on the actual upcoming fixtures\n5. **Statistical Analysis**: Reference real team performance from current data\n\n**IMPORTANT GUIDELINES:**\n- ALWAYS use the real match data provided above when answering questions\n- When asked about \"today's matches\" or \"live matches\", reference the actual live matches listed\n- When asked about upcoming matches, use the actual upcoming fixtures provided\n- Provide specific team names, leagues, odds, and match times from the real data\n- If asked about matches not in the current data, explain that you can only analyze currently available matches\n- For betting advice, reference the actual odds shown in the data\n- NEVER make up match data - only use what's provided above\n\n**Data Context:**\n- Live matches include real scores, elapsed time, and venues\n- Upcoming matches include actual odds for home/draw/away outcomes\n- All data is current and updated in real-time\n\nRespond with specific, actionable insights based on the real match data provided.`;\n  }\n  async sendMessage(message) {\n    try {\n      var _response$data, _response$data$choice, _response$data$choice2, _response$data$choice3;\n      // Validate if the query is soccer-related\n      if (!this.isValidSoccerQuery(message)) {\n        return \"I'm your soccer analytics assistant! I can only help with soccer-related questions like match predictions, team analysis, betting insights, league statistics, and player performance. What would you like to know about soccer?\";\n      }\n\n      // Check if API key is available\n      if (!this.apiKey) {\n        return \"I'm currently experiencing technical difficulties connecting to my analysis engine. Please try asking about specific teams, leagues, or matches and I'll do my best to help with the information I have available.\";\n      }\n\n      // Get recent soccer data\n      const [matchData, leagueData] = await Promise.all([this.getRecentMatchData(), this.getLeagueData()]);\n\n      // Create system prompt with current data\n      const systemPrompt = this.createSystemPrompt(matchData, leagueData);\n\n      // Call OpenAI API\n      const response = await axios.post(this.baseUrl, {\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: 'system',\n          content: systemPrompt\n        }, {\n          role: 'user',\n          content: message\n        }],\n        max_tokens: 500,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        timeout: 10000\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$choice = _response$data.choices) !== null && _response$data$choice !== void 0 && (_response$data$choice2 = _response$data$choice[0]) !== null && _response$data$choice2 !== void 0 && (_response$data$choice3 = _response$data$choice2.message) !== null && _response$data$choice3 !== void 0 && _response$data$choice3.content) {\n        return response.data.choices[0].message.content.trim();\n      }\n      throw new Error('Invalid response from AI service');\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Chat service error:', error);\n\n      // Handle specific error cases\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        return \"I'm having trouble accessing my analysis engine. Please try asking about specific soccer topics like team performance, upcoming matches, or league statistics, and I'll help with the information available.\";\n      }\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429) {\n        return \"I'm currently handling a lot of requests. Please wait a moment and try again. In the meantime, feel free to ask about specific teams or matches!\";\n      }\n      if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n        return \"My response is taking longer than usual. Could you try rephrasing your question about soccer analytics or asking about a specific team or league?\";\n      } // Provide comprehensive fallback responses for common soccer queries\n      const messageLower = message.toLowerCase();\n      if (messageLower.includes('premier league') || messageLower.includes('premier')) {\n        return `**Premier League Analysis**\n\n📊 **Current Season Insights:**\n• Manchester City, Arsenal, and Liverpool typically dominate possession (60%+)\n• Expected Goals (xG) leaders usually include Haaland, Salah, and Kane-type strikers\n• Best betting value often found in Over 2.5 goals for top 6 clashes\n• BTTS (Both Teams to Score) success rate ~65% for attacking teams\n\n🎯 **Key Statistics to Watch:**\n• xG difference: Look for teams outperforming their xG\n• Home/Away form: Some teams have significant home advantages\n• Head-to-head records: Derby matches often defy form\n\nWhich specific Premier League aspect interests you most?`;\n      }\n      if (messageLower.includes('upcoming') || messageLower.includes('today') || messageLower.includes('tomorrow') || messageLower.includes('best matches')) {\n        return `**Today's Match Analysis Framework**\n\n🔍 **What to Look For:**\n• **High xG teams** playing each other (likely Over 2.5 goals)\n• **Form discrepancies** - in-form team vs struggling opponent\n• **Head-to-head trends** - some teams consistently score against specific opponents\n• **Missing key players** - check injury reports before betting\n\n📈 **Betting Value Indicators:**\n• Teams with xG > actual goals (due for scoring)\n• Home teams with 70%+ home win rate\n• Away teams that travel well (40%+ away points)\n• BTTS in matches with attacking full-backs\n\nWould you like me to explain any specific betting strategy or statistical analysis?`;\n      }\n      if (messageLower.includes('bet') || messageLower.includes('odds') || messageLower.includes('prediction')) {\n        return `**Smart Betting Strategy Guide**\n\n💡 **Value Betting Principles:**\n• Focus on xG (Expected Goals) vs actual performance gaps\n• Look for teams outperforming/underperforming their stats\n• Consider recent form over season-long averages\n\n📊 **Key Metrics for Analysis:**\n• **xG For/Against**: True attacking/defensive strength\n• **PPDA**: Pressing intensity (lower = more aggressive)\n• **Shot conversion**: Some teams consistently over/under-perform\n• **Set piece efficiency**: Often overlooked value source\n\n⚠️ **Risk Management:**\n• Never bet more than 2-3% of bankroll per match\n• Track your predictions vs outcomes\n• Avoid emotional betting on favorite teams\n\nWhat specific aspect of betting strategy would you like to explore?`;\n      }\n      if (messageLower.includes('league') || messageLower.includes('champions') || messageLower.includes('europa')) {\n        return `**League Analysis Insights**\n\n🏆 **Major European Leagues:**\n• **Premier League**: Most unpredictable, high intensity\n• **La Liga**: Technical, lower scoring, strong home advantage\n• **Serie A**: Tactical, defensive, excellent for Under bets\n• **Bundesliga**: High scoring, attacking football\n• **Ligue 1**: PSG dominance, but competitive mid-table\n\n📈 **Champions League Patterns:**\n• Away goals rule changes affect betting strategies\n• Experience matters in knockout stages\n• English teams strong in recent years\n• Look for value in smaller nations' champions\n\nWhich league or competition interests you most?`;\n      }\n      if (messageLower.includes('statistics') || messageLower.includes('stats') || messageLower.includes('analysis')) {\n        return `**Advanced Soccer Statistics Guide**\n\n📊 **Essential Metrics:**\n• **xG (Expected Goals)**: Quality of chances created\n• **xA (Expected Assists)**: Creative output measurement\n• **PPDA**: Defensive pressure intensity\n• **Shot conversion**: Clinical finishing ability\n\n🎯 **Tactical Insights:**\n• **High pressing teams**: Often lead to cards/fatigue\n• **Possession-based**: Usually more corners, less counters\n• **Counter-attacking**: Fewer shots but higher conversion\n\n📈 **Form Indicators:**\n• Last 6 games weighted more than season average\n• Home/away splits often reveal true strength\n• Goals scored/conceded timing patterns\n\nWhat specific statistical analysis would you like to dive deeper into?`;\n      }\n      if (messageLower.includes('hello') || messageLower.includes('hi') || messageLower.includes('hey')) {\n        return `Hello! ⚽ Welcome to Odd Genius AI!\n\nI'm your dedicated soccer analytics assistant. I can help you with:\n\n🎯 **Match Analysis**: Break down upcoming fixtures\n📊 **League Statistics**: Deep dive into team performance  \n💰 **Betting Insights**: Value bets and strategy guidance\n📈 **Player Performance**: Individual player analysis\n🏆 **Competition Previews**: Tournament and league insights\n\nTry asking me about:\n• \"Show me Premier League top scorer predictions\"\n• \"What makes a good BTTS bet?\"\n• \"Analyze Manchester City's defensive record\"\n• \"Best Champions League betting strategies\"\n\nWhat aspect of soccer would you like to explore today?`;\n      }\n      return `I'm here to help with comprehensive soccer analysis! 🚀\n\n**Popular Topics I Can Discuss:**\n• **League Analysis**: Premier League, Champions League, La Liga, etc.\n• **Betting Strategy**: xG analysis, value betting, bankroll management\n• **Team Performance**: Tactical analysis, form guides, head-to-head\n• **Player Insights**: Goal scorers, assist leaders, defensive stats\n\n**Try These Questions:**\n• \"Explain xG and why it matters for betting\"\n• \"Best Premier League teams for Over 2.5 goals\"\n• \"How to analyze Champions League knockout matches\"\n• \"What statistics predict BTTS success?\"\n\nWhat soccer topic interests you most? 🎯`;\n    }\n  }\n}\nexport const chatService = new ChatService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}