{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius - WORKING - Copy - Copy\\\\frontend\\\\src\\\\pages\\\\LiveMatches.tsx\";\n// LiveMatches.tsx - A component to display live or upcoming soccer matches\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Container, Heading, SimpleGrid, Flex, Button, Icon, Text, Tabs, TabList, TabPanels, Tab, TabPanel\n\n// Image and Divider removed as they're unused\n} from \"@chakra-ui/react\";\nimport { FiRefreshCw, FiCalendar } from \"react-icons/fi\";\nimport { BsLightningFill } from \"react-icons/bs\";\nimport { MdAnalytics } from \"react-icons/md\";\nimport soccerApiService from \"../api/soccerApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveMatches = ({\n  isUpcoming = false\n}) => {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const navigate = useNavigate();\n\n  // Fetch matches based on mode (live or upcoming)\n  const fetchMatches = async () => {\n    setLoading(true);\n    try {\n      let response;\n      if (isUpcoming) {\n        response = await soccerApiService.getUpcomingMatches(48); // Get 48 hours of upcoming matches\n      } else {\n        response = await soccerApiService.getLiveMatches();\n      }\n      setMatches(response);\n      setError(null);\n    } catch (err) {\n      console.error(`Error fetching ${isUpcoming ? 'upcoming' : 'live'} matches:`, err);\n      setError(`Failed to load ${isUpcoming ? 'upcoming' : 'live'} matches. Please try again.`);\n      setMatches([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial fetch on component mount\n  useEffect(() => {\n    fetchMatches();\n\n    // Set up auto-refresh interval - different times for live vs upcoming\n    const refreshInterval = setInterval(fetchMatches, isUpcoming ? 60000 : 30000 // 60 seconds for upcoming, 30 seconds for live\n    );\n    return () => clearInterval(refreshInterval);\n  }, []);\n\n  // Group matches by league for organized display\n  const groupedMatches = (Array.isArray(matches) ? matches : []).reduce((acc, match) => {\n    var _match$league;\n    const leagueName = ((_match$league = match.league) === null || _match$league === void 0 ? void 0 : _match$league.name) || \"Other Leagues\";\n    if (!acc[leagueName]) {\n      acc[leagueName] = [];\n    }\n    acc[leagueName].push(match);\n    return acc;\n  }, {});\n\n  // Convert grouped matches to array for easier rendering\n  const leagueGroups = Object.keys(groupedMatches).map(league => ({\n    name: league,\n    matches: groupedMatches[league]\n  }));\n\n  // Handle refresh request\n  const handleRefresh = () => {\n    fetchMatches();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      pt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: isUpcoming ? \"Upcoming Matches\" : \"Live Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: FiRefreshCw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }, this),\n          colorScheme: \"blue\",\n          isLoading: loading,\n          onClick: handleRefresh,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        textAlign: \"center\",\n        children: \"Loading matches...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      pt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: isUpcoming ? \"Upcoming Matches\" : \"Live Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: FiRefreshCw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }, this),\n          colorScheme: \"blue\",\n          onClick: handleRefresh,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"red.50\",\n        color: \"red.600\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"medium\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  if (matches.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      pt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: isUpcoming ? \"Upcoming Matches\" : \"Live Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: FiRefreshCw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 23\n          }, this),\n          colorScheme: \"blue\",\n          onClick: handleRefresh,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoMatches, {\n        message: isUpcoming ? \"No upcoming matches found\" : \"No live matches at the moment\",\n        onRefresh: isUpcoming ? () => navigate(\"/\") : () => navigate(\"/upcoming\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.xl\",\n    pt: 5,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: isUpcoming ? FiCalendar : BsLightningFill,\n          color: isUpcoming ? \"teal.500\" : \"red.500\",\n          mr: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: isUpcoming ? \"Upcoming Matches\" : \"Live Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: MdAnalytics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 23\n          }, this),\n          colorScheme: \"teal\",\n          variant: \"outline\",\n          mr: 2,\n          onClick: () => navigate(\"/analytics\"),\n          children: \"Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: FiRefreshCw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }, this),\n          colorScheme: \"blue\",\n          isLoading: loading,\n          onClick: handleRefresh,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      variant: \"soft-rounded\",\n      colorScheme: \"blue\",\n      mb: 4,\n      index: activeTab,\n      onChange: index => setActiveTab(index),\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        mb: 4,\n        overflowX: \"auto\",\n        css: {\n          scrollbarWidth: \"thin\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          _selected: {\n            bg: \"blue.50\",\n            fontWeight: \"semibold\"\n          },\n          _hover: {\n            bg: \"gray.50\"\n          },\n          borderRadius: \"md\",\n          mr: 2,\n          children: \"All Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), leagueGroups.map((league, idx) => /*#__PURE__*/_jsxDEV(Tab, {\n          _selected: {\n            bg: \"blue.50\",\n            fontWeight: \"semibold\"\n          },\n          _hover: {\n            bg: \"gray.50\"\n          },\n          borderRadius: \"md\",\n          mr: 2,\n          children: league.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          p: 0,\n          children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: {\n              base: 1,\n              md: 2,\n              lg: 3\n            },\n            spacing: 4,\n            children: matches.map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n              match: match,\n              onClick: () => navigate(`/match/${match.id}`)\n            }, match.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), leagueGroups.map((league, idx) => /*#__PURE__*/_jsxDEV(TabPanel, {\n          p: 0,\n          children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: {\n              base: 1,\n              md: 2,\n              lg: 3\n            },\n            spacing: 4,\n            children: league.matches.map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n              match: match,\n              onClick: () => navigate(`/match/${match.id}`)\n            }, match.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\nexport default LiveMatches;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}