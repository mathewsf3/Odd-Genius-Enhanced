{"ast":null,"code":"import axios from 'axios';\n// Backend API Configuration\nconst BACKEND_BASE_URL = 'http://localhost:5000/api';\n\n// Cache for BTTS statistics data\n\nconst bttsStatsCache = {};\n\n// Clear cache function\nconst clearBTTSStatsCache = () => {\n  Object.keys(bttsStatsCache).forEach(key => delete bttsStatsCache[key]);\n  console.log('[BTTSStatsService] Cache cleared');\n};\n\n// Main function to fetch BTTS statistics from backend\nconst fetchBTTSStats = async (matchId, gameCount = 10) => {\n  try {\n    // Create a cache key based on match ID and game count\n    const cacheKey = `${matchId}-${gameCount}`;\n\n    // Check if we have cached data that's less than 1 hour old\n    const cachedData = bttsStatsCache[cacheKey];\n    if (cachedData && Date.now() - cachedData.timestamp < 3600000) {\n      console.log(`[BTTSStatsService] Using cached BTTS stats data for ${cacheKey}`);\n      return cachedData.data;\n    }\n    console.log(`[BTTSStatsService] Fetching BTTS stats from backend for match ${matchId} with ${gameCount} games`);\n\n    // Make request to backend BTTS statistics endpoint\n    const response = await axios.get(`${BACKEND_BASE_URL}/matches/${matchId}/btts`, {\n      params: {\n        matches: gameCount\n      },\n      timeout: 15000\n    });\n    if (!response.data || !response.data.success || !response.data.result) {\n      throw new Error('Invalid response from backend BTTS statistics endpoint');\n    }\n    const backendResult = response.data.result;\n\n    // Transform backend response to match frontend BTTSStats interface\n    const result = {\n      homeStats: backendResult.homeStats,\n      awayStats: backendResult.awayStats,\n      h2hStats: backendResult.h2hStats,\n      combinedStats: backendResult.combinedStats,\n      isFallbackData: false // Backend only provides real data\n    };\n\n    // Cache the result\n    bttsStatsCache[cacheKey] = {\n      data: result,\n      timestamp: Date.now()\n    };\n    console.log(`[BTTSStatsService] Successfully fetched BTTS stats from backend for match ${matchId}`);\n    console.log(`[BTTSStatsService] Home team: ${result.homeStats.bttsYesPercentage}% BTTS, Away team: ${result.awayStats.bttsYesPercentage}% BTTS`);\n    console.log(`[BTTSStatsService] Combined prediction: ${result.combinedStats.prediction}`);\n    return result;\n  } catch (error) {\n    console.error('[BTTSStatsService] Error fetching BTTS stats from backend:', error);\n    throw error;\n  }\n};\nexport default {\n  fetchBTTSStats,\n  clearBTTSStatsCache\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}