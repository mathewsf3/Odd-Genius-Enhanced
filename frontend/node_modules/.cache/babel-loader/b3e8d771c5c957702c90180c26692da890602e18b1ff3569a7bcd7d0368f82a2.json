{"ast":null,"code":"import axios from'axios';import soccerApiService from'../api/soccerApiService';class ChatService{constructor(){this.apiKey=void 0;this.openaiBaseUrl=void 0;this.backendBaseUrl=void 0;this.apiKey=process.env.REACT_APP_OPENAI_API_KEY||'';this.openaiBaseUrl='https://api.openai.com/v1/chat/completions';this.backendBaseUrl=process.env.REACT_APP_API_URL||'http://localhost:5000/api';}isValidSoccerQuery(message){const messageLower=message.toLowerCase();const commonTeams=['spain','france','england','germany','brazil','argentina','portugal','italy','netherlands','belgium','croatia','uruguay','manchester united','manchester city','liverpool','chelsea','arsenal','tottenham','barcelona','real madrid','atletico madrid','bayern munich','borussia dortmund','psg','juventus','ac milan','inter milan','napoli','ajax','benfica','porto'];// Return true if message contains any common team name\nif(commonTeams.some(team=>messageLower.includes(team.toLowerCase()))){return true;}// Return true for any soccer-related query\nconst soccerKeywords=['soccer','football','match','team','league','goal','score','bet','odds','statistics','analysis','prediction','premier league','champions league','la liga','serie a','bundesliga','ligue 1','mls','world cup','euro','player','coach','transfer','formation','tactics','expected goals','xg','xa','possession','shots','corners','cards','fouls','offside','penalty','free kick','striker','midfielder','defender','goalkeeper'];return soccerKeywords.some(keyword=>messageLower.includes(keyword));}async getRecentMatchData(){try{// Get live and upcoming matches\nconst[liveMatches,upcomingMatches]=await Promise.all([soccerApiService.getLiveMatches().catch(()=>({result:[]})),soccerApiService.getUpcomingMatches().catch(()=>({result:[]}))]);const liveData=(liveMatches===null||liveMatches===void 0?void 0:liveMatches.result)||liveMatches||[];const upcomingData=(upcomingMatches===null||upcomingMatches===void 0?void 0:upcomingMatches.result)||upcomingMatches||[];// Get next 7 days of matches\nconst now=new Date();const nextWeek=new Date(now.getTime()+7*24*60*60*1000);const recentMatches=Array.isArray(upcomingData)?upcomingData.filter(match=>{const matchDate=new Date(`${match.date} ${match.time}`);return matchDate>=now&&matchDate<=nextWeek;}).slice(0,20):[];return{liveMatches:Array.isArray(liveData)?liveData.slice(0,10):[],upcomingMatches:recentMatches,totalLive:Array.isArray(liveData)?liveData.length:0,totalUpcoming:recentMatches.length,rawLiveData:liveData,rawUpcomingData:upcomingData};}catch(error){console.error('Error fetching match data:',error);return{liveMatches:[],upcomingMatches:[],totalLive:0,totalUpcoming:0,rawLiveData:[],rawUpcomingData:[]};}}async getLeagueData(){try{// Get popular leagues data if available\nconst leagues=['Premier League','Champions League','La Liga','Serie A','Bundesliga','Ligue 1'];return{availableLeagues:leagues,note:\"I can provide analysis for major European leagues and competitions\"};}catch(error){console.error('Error fetching league data:',error);return{availableLeagues:[],note:\"League data temporarily unavailable\"};}}createSystemPrompt(matchData,leagueData){const liveMatchesInfo=matchData.liveMatches.map(match=>{var _match$homeTeam,_match$awayTeam,_match$score,_match$score2,_match$league;return`${(_match$homeTeam=match.homeTeam)===null||_match$homeTeam===void 0?void 0:_match$homeTeam.name} vs ${(_match$awayTeam=match.awayTeam)===null||_match$awayTeam===void 0?void 0:_match$awayTeam.name} (${(_match$score=match.score)===null||_match$score===void 0?void 0:_match$score.home}-${(_match$score2=match.score)===null||_match$score2===void 0?void 0:_match$score2.away}, ${match.elapsed}', League: ${(_match$league=match.league)===null||_match$league===void 0?void 0:_match$league.name})`;}).slice(0,5).join(', ');const upcomingMatchesInfo=matchData.upcomingMatches.map(match=>{var _match$homeTeam2,_match$awayTeam2,_match$league2,_match$odds,_match$odds2,_match$odds3;return`${(_match$homeTeam2=match.homeTeam)===null||_match$homeTeam2===void 0?void 0:_match$homeTeam2.name} vs ${(_match$awayTeam2=match.awayTeam)===null||_match$awayTeam2===void 0?void 0:_match$awayTeam2.name} (${match.date} ${match.time}, League: ${(_match$league2=match.league)===null||_match$league2===void 0?void 0:_match$league2.name}, Odds: ${(_match$odds=match.odds)===null||_match$odds===void 0?void 0:_match$odds.home}/${(_match$odds2=match.odds)===null||_match$odds2===void 0?void 0:_match$odds2.draw}/${(_match$odds3=match.odds)===null||_match$odds3===void 0?void 0:_match$odds3.away})`;}).slice(0,5).join(', ');return`You are Odd Genius AI, a specialized soccer analytics assistant with access to REAL-TIME data. You help users with:\n\n**CURRENT LIVE MATCHES** (${matchData.totalLive} ongoing):\n${liveMatchesInfo||'No live matches currently'}\n\n**UPCOMING MATCHES** (Next 7 days - ${matchData.totalUpcoming} matches):\n${upcomingMatchesInfo||'No upcoming matches in the next 7 days'}\n\n**Your Capabilities:**\n1. **Real-Time Analysis**: Provide insights on the actual live and upcoming matches shown above\n2. **Betting Insights**: Use the real odds data (home/draw/away) for value betting recommendations\n3. **League Analysis**: Analyze patterns from the leagues currently active\n4. **Match Predictions**: Base predictions on the actual upcoming fixtures\n5. **Statistical Analysis**: Reference real team performance from current data\n\n**IMPORTANT GUIDELINES:**\n- ALWAYS use the real match data provided above when answering questions\n- When asked about \"today's matches\" or \"live matches\", reference the actual live matches listed\n- When asked about upcoming matches, use the actual upcoming fixtures provided\n- Provide specific team names, leagues, odds, and match times from the real data\n- If asked about matches not in the current data, explain that you can only analyze currently available matches\n- For betting advice, reference the actual odds shown in the data\n- NEVER make up match data - only use what's provided above\n\n**Data Context:**\n- Live matches include real scores, elapsed time, and venues\n- Upcoming matches include actual odds for home/draw/away outcomes\n- All data is current and updated in real-time\n\nRespond with specific, actionable insights based on the real match data provided.`;}async sendMessage(message){try{var _response$data,_response$data$choice,_response$data$choice2,_response$data$choice3;// Validate if the query is soccer-related\nif(!this.isValidSoccerQuery(message)){return\"I'm your soccer analytics assistant! I can only help with soccer-related questions like match predictions, team analysis, betting insights, league statistics, and player performance. What would you like to know about soccer?\";}// Get recent soccer data first for dynamic analysis\nconst[matchData,leagueData]=await Promise.all([this.getRecentMatchData(),this.getLeagueData()]);// ENHANCED: Check for specific match queries with dynamic search\nconst messageLower=message.toLowerCase();// Extract potential team names from the message\nconst teamNamePatterns=[// VS style patterns\n/(\\w+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+)/gi,/(\\w+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+[\\s\\w]+)/gi,/(\\w+[\\s\\w]+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+)/gi,/(\\w+[\\s\\w]+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+[\\s\\w]+)/gi,// Match/game/analysis style patterns\n/(\\w+)\\s+(\\w+)(?:\\s+match|\\s+game|\\s+analysis)/gi,/(\\w+[\\s\\w]+)\\s+(\\w+)(?:\\s+match|\\s+game|\\s+analysis)/gi,/(\\w+)\\s+(\\w+[\\s\\w]+)(?:\\s+match|\\s+game|\\s+analysis)/gi,/(\\w+[\\s\\w]+)\\s+(\\w+[\\s\\w]+)(?:\\s+match|\\s+game|\\s+analysis)/gi,// Between patterns\n/(?:match|game)\\s+(?:between\\s+)?(\\w+)\\s+(?:and\\s+|vs?\\s+|x\\s+)(\\w+)/gi,/(?:match|game)\\s+(?:between\\s+)?(\\w+[\\s\\w]+)\\s+(?:and\\s+|vs?\\s+|x\\s+)(\\w+)/gi,/(?:match|game)\\s+(?:between\\s+)?(\\w+)\\s+(?:and\\s+|vs?\\s+|x\\s+)(\\w+[\\s\\w]+)/gi,/(?:match|game)\\s+(?:between\\s+)?(\\w+[\\s\\w]+)\\s+(?:and\\s+|vs?\\s+|x\\s+)(\\w+[\\s\\w]+)/gi];let searchTerms=[];// Try to extract team names using the patterns\nfor(const pattern of teamNamePatterns){const matches=[...message.matchAll(pattern)];if(matches.length>0){// Clean up the extracted team names\nconst team1=matches[0][1].trim();const team2=matches[0][2].trim();// Validate that the extracted teams are not common words or too short\nif(this.isValidTeamName(team1)&&this.isValidTeamName(team2)){searchTerms=[team1,team2];break;}}}// Also check for common team names mentioned in the message\nif(searchTerms.length<2){const commonTeams=['spain','france','england','germany','brazil','argentina','portugal','italy','netherlands','belgium','croatia','uruguay','manchester united','manchester city','liverpool','chelsea','arsenal','tottenham','barcelona','real madrid','atletico madrid','bayern munich','borussia dortmund','psg','juventus','ac milan','inter milan','napoli','ajax','benfica','porto'];const foundTeams=commonTeams.filter(team=>messageLower.includes(team.toLowerCase()));if(foundTeams.length>=2){searchTerms=foundTeams.slice(0,2);}else if(foundTeams.length===1&&searchTerms.length===1&&searchTerms[0]!==foundTeams[0]){searchTerms.push(foundTeams[0]);}else if(foundTeams.length===1&&searchTerms.length===0){searchTerms=[foundTeams[0]];}}// If we found potential team names, try dynamic match search\nif(searchTerms.length>0){console.log('Searching for match with teams:',searchTerms);const foundMatch=await this.findMatchDynamically(searchTerms);if(foundMatch){// Get detailed analysis for this specific match\nconst detailedData=foundMatch.id?await this.getDetailedMatchAnalysis(foundMatch.id):null;return this.formatComprehensiveMatchAnalysis(foundMatch,detailedData);}else{// No exact match found, but provide helpful alternative\nreturn`🔍 I couldn't find a specific match with ${searchTerms.join(' and ')} in the current fixtures.\\n\\n📅 **Available Matches:**\\n${this.formatUpcomingMatchesResponse(matchData)}\\n\\n💡 Try asking about specific matches from the list above!`;}}// Check if API key is available for OpenAI fallback\nif(!this.apiKey){return\"I'm currently experiencing technical difficulties connecting to my analysis engine. Please try asking about specific teams, leagues, or matches and I'll do my best to help with the information I have available.\";}// Create system prompt with current data for OpenAI\nconst systemPrompt=this.createSystemPrompt(matchData,leagueData);// Call OpenAI API for general queries\nconst response=await axios.post(this.openaiBaseUrl,{model:'gpt-3.5-turbo',messages:[{role:'system',content:systemPrompt},{role:'user',content:message}],max_tokens:500,temperature:0.7},{headers:{'Authorization':`Bearer ${this.apiKey}`,'Content-Type':'application/json'},timeout:10000});if((_response$data=response.data)!==null&&_response$data!==void 0&&(_response$data$choice=_response$data.choices)!==null&&_response$data$choice!==void 0&&(_response$data$choice2=_response$data$choice[0])!==null&&_response$data$choice2!==void 0&&(_response$data$choice3=_response$data$choice2.message)!==null&&_response$data$choice3!==void 0&&_response$data$choice3.content){return response.data.choices[0].message.content.trim();}throw new Error('Invalid response from AI service');}catch(error){var _error$response,_error$response2;console.error('Chat service error:',error);// Handle specific error cases\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){return\"I'm having trouble accessing my analysis engine. Please try asking about specific soccer topics like team performance, upcoming matches, or league statistics, and I'll help with the information available.\";}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===429){return\"I'm currently handling a lot of requests. Please wait a moment and try again. In the meantime, feel free to ask about specific teams or matches!\";}if(error.code==='ECONNABORTED'||error.message.includes('timeout')){return\"My response is taking longer than usual. Could you try rephrasing your question about soccer analytics or asking about a specific team or league?\";}// Enhanced fallback responses with real data when OpenAI fails\nconst messageLower=message.toLowerCase();// Get fresh match data for fallback responses\nconst[fallbackMatchData]=await Promise.all([this.getRecentMatchData()]);// Try dynamic match search for fallback responses\nconst teamNamePatterns=[// VS style patterns\n/(\\w+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+)/gi,/(\\w+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+[\\s\\w]+)/gi,/(\\w+[\\s\\w]+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+)/gi,/(\\w+[\\s\\w]+)\\s+(?:vs?|x|against|versus|\\-)\\s+(\\w+[\\s\\w]+)/gi,// Match/game/analysis style patterns\n/(\\w+)\\s+(\\w+)(?:\\s+match|\\s+game|\\s+analysis)/gi,// Between patterns\n/(?:match|game)\\s+(?:between\\s+)?(\\w+)\\s+(?:and\\s+|vs?\\s+|x\\s+)(\\w+)/gi];let searchTerms=[];for(const pattern of teamNamePatterns){const matches=[...message.matchAll(pattern)];if(matches.length>0){const team1=matches[0][1].trim();const team2=matches[0][2].trim();if(this.isValidTeamName(team1)&&this.isValidTeamName(team2)){searchTerms=[team1,team2];break;}}}// Also check for common team names\nif(searchTerms.length<2){const commonTeams=['spain','france','england','germany','brazil','argentina','portugal','italy','netherlands','belgium','croatia','uruguay','manchester united','manchester city','liverpool','chelsea','arsenal','tottenham','barcelona','real madrid','atletico madrid','bayern munich','borussia dortmund','psg','juventus','ac milan','inter milan','napoli','ajax','benfica','porto'];const foundTeams=commonTeams.filter(team=>messageLower.includes(team.toLowerCase()));if(foundTeams.length>=2){searchTerms=foundTeams.slice(0,2);}else if(foundTeams.length===1&&searchTerms.length===1&&searchTerms[0]!==foundTeams[0]){searchTerms.push(foundTeams[0]);}else if(foundTeams.length===1&&searchTerms.length===0){searchTerms=[foundTeams[0]];}}if(searchTerms.length>0){const foundMatch=await this.findMatchDynamically(searchTerms);if(foundMatch){const detailedData=foundMatch.id?await this.getDetailedMatchAnalysis(foundMatch.id):null;return this.formatComprehensiveMatchAnalysis(foundMatch,detailedData);}}// Specific query patterns for fallback\nif(messageLower.includes('live')||messageLower.includes('going live')||messageLower.includes('now')){return this.formatLiveMatchesResponse(fallbackMatchData);}if(messageLower.includes('upcoming')||messageLower.includes('today')||messageLower.includes('tomorrow')||messageLower.includes('best matches')){return this.formatUpcomingMatchesResponse(fallbackMatchData);}if(messageLower.includes('bet')||messageLower.includes('odds')||messageLower.includes('prediction')){return this.formatBettingInsightsResponse(fallbackMatchData);}// Legacy specific match checks (enhanced)\nif(messageLower.includes('spain')&&messageLower.includes('france')){return this.formatSpecificMatchResponse(fallbackMatchData,'spain','france');}if(messageLower.includes('france')&&messageLower.includes('spain')){return this.formatSpecificMatchResponse(fallbackMatchData,'france','spain');}if(messageLower.includes('hello')||messageLower.includes('hi')||messageLower.includes('hey')){const liveMatchCount=fallbackMatchData.totalLive;const upcomingMatchCount=fallbackMatchData.totalUpcoming;let liveMatchesPreview='';if(liveMatchCount>0){const topLiveMatches=fallbackMatchData.liveMatches.slice(0,2);liveMatchesPreview=topLiveMatches.map(match=>{var _match$homeTeam3,_match$score3,_match$score4,_match$awayTeam3;return`• ${(_match$homeTeam3=match.homeTeam)===null||_match$homeTeam3===void 0?void 0:_match$homeTeam3.name} ${(_match$score3=match.score)===null||_match$score3===void 0?void 0:_match$score3.home}-${(_match$score4=match.score)===null||_match$score4===void 0?void 0:_match$score4.away} ${(_match$awayTeam3=match.awayTeam)===null||_match$awayTeam3===void 0?void 0:_match$awayTeam3.name} (${match.elapsed}')`;}).join('\\n');}let upcomingMatchesPreview='';if(upcomingMatchCount>0){const nextMatches=fallbackMatchData.upcomingMatches.slice(0,2);upcomingMatchesPreview=nextMatches.map(match=>{var _match$homeTeam4,_match$awayTeam4;return`• ${(_match$homeTeam4=match.homeTeam)===null||_match$homeTeam4===void 0?void 0:_match$homeTeam4.name} vs ${(_match$awayTeam4=match.awayTeam)===null||_match$awayTeam4===void 0?void 0:_match$awayTeam4.name} (${match.date} ${match.time})`;}).join('\\n');}return`👋 Welcome to Odd Genius AI! ⚽\\n\\nI'm your football analytics assistant with real-time match data and expert insights.\\n\\n${liveMatchCount>0?`🔴 **LIVE MATCHES (${liveMatchCount} in progress):**\\n${liveMatchesPreview}\\n\\n`:'🔴 **LIVE MATCHES: None currently in progress**\\nCheck back later for live scores and analysis!\\n\\n'}${upcomingMatchCount>0?`📅 **UPCOMING FIXTURES (${upcomingMatchCount} in next 7 days):**\\n${upcomingMatchesPreview}\\n\\n`:'📅 **UPCOMING FIXTURES: None scheduled**\\nNo matches scheduled in the next 7 days.\\n\\n'}I can help you with:\\n\\n1️⃣ **Match Information**\\n   • Live scores & match updates\\n   • Upcoming fixtures & predictions\\n   • League tables & standings\\n\\n2️⃣ **Team Analysis**\\n   • Recent form & performance\\n   • Head-to-head records\\n   • Player statistics\\n\\n3️⃣ **Betting Insights**\\n   • Real-time odds analysis\\n   • Value betting opportunities\\n   • Historical betting patterns\\n\\nExample queries:\\n• \"Show me live matches now\"\\n• \"What are the upcoming matches this weekend?\"\\n• \"Analyze Arsenal vs Chelsea odds\"\\n\\nWhat would you like to know about today's matches? 🎯`;}// Enhanced general response with real data context\nreturn`I'm here to help with soccer analytics using real-time data! 🚀\\n\\n📊 **Current Data Available:**\\n• ${fallbackMatchData.totalLive} live matches in progress\\n• ${fallbackMatchData.totalUpcoming} upcoming matches (next 7 days)\\n• Real odds and betting insights\\n• League analysis from active competitions\\n\\n🎯 **Try These Specific Queries:**\\n• \"Show me all live matches now\"\\n• \"What are the best matches to bet on today?\"\\n• \"Give me odds for upcoming matches\"\\n• \"France vs Spain analysis\" (or any team combination)\\n• \"Which live matches have good betting value?\"\\n• \"When do today's matches start?\"\\n\\n💡 **Tip**: I work best with specific questions about current matches, betting opportunities, or team analysis! I can analyze ANY match from the current fixtures.\\n\\nWhat soccer topic interests you most? ⚽`;}}formatLiveMatchesResponse(matchData){if(matchData.totalLive===0){return\"🔴 **No Live Matches Currently**\\n\\nThere are no soccer matches being played right now. Check back later for live action!\\n\\nWould you like me to show you upcoming matches instead?\";}const liveMatches=matchData.liveMatches.slice(0,5);let response=`🔴 **${matchData.totalLive} LIVE MATCHES NOW**\\n\\n`;liveMatches.forEach((match,index)=>{var _match$homeTeam5,_match$score5,_match$score6,_match$awayTeam5,_match$league3;response+=`**${index+1}. ${(_match$homeTeam5=match.homeTeam)===null||_match$homeTeam5===void 0?void 0:_match$homeTeam5.name} ${(_match$score5=match.score)===null||_match$score5===void 0?void 0:_match$score5.home} - ${(_match$score6=match.score)===null||_match$score6===void 0?void 0:_match$score6.away} ${(_match$awayTeam5=match.awayTeam)===null||_match$awayTeam5===void 0?void 0:_match$awayTeam5.name}**\\n`;response+=`   ⏱️ ${match.elapsed}' | 🏆 ${(_match$league3=match.league)===null||_match$league3===void 0?void 0:_match$league3.name}\\n`;response+=`   🏟️ ${match.venue||'Stadium TBA'}\\n`;if(match.odds){response+=`   💰 Odds: ${match.odds.home} / ${match.odds.draw} / ${match.odds.away}\\n`;}response+=`\\n`;});if(matchData.totalLive>5){response+=`*...and ${matchData.totalLive-5} more live matches*\\n\\n`;}response+=\"⚡ **Live Betting Tips:**\\n\";response+=\"• Watch for momentum shifts in close games\\n\";response+=\"• Consider in-play Over/Under based on current pace\\n\";response+=\"• Look for red card opportunities in heated matches\\n\";return response;}formatUpcomingMatchesResponse(matchData){if(matchData.totalUpcoming===0){return\"📅 **No Upcoming Matches in Next 7 Days**\\n\\nThere are no soccer matches scheduled for the next week in our database.\\n\\nWould you like me to analyze current league standings or recent form instead?\";}const upcomingMatches=matchData.upcomingMatches.slice(0,8);let response=`📅 **UPCOMING MATCHES (Next 7 Days) - ${matchData.totalUpcoming} Total**\\n\\n`;upcomingMatches.forEach((match,index)=>{var _match$homeTeam6,_match$awayTeam6,_match$league4;response+=`**${index+1}. ${(_match$homeTeam6=match.homeTeam)===null||_match$homeTeam6===void 0?void 0:_match$homeTeam6.name} vs ${(_match$awayTeam6=match.awayTeam)===null||_match$awayTeam6===void 0?void 0:_match$awayTeam6.name}**\\n`;response+=`   📅 ${match.date} at ${match.time}\\n`;response+=`   🏆 ${(_match$league4=match.league)===null||_match$league4===void 0?void 0:_match$league4.name}\\n`;response+=`   🏟️ ${match.venue||'Venue TBA'}\\n`;if(match.odds){var _match$probability,_match$probability2,_match$probability3;response+=`   💰 Odds: Home ${match.odds.home} | Draw ${match.odds.draw} | Away ${match.odds.away}\\n`;response+=`   📊 Probability: ${(_match$probability=match.probability)===null||_match$probability===void 0?void 0:_match$probability.home} / ${(_match$probability2=match.probability)===null||_match$probability2===void 0?void 0:_match$probability2.draw} / ${(_match$probability3=match.probability)===null||_match$probability3===void 0?void 0:_match$probability3.away}\\n`;}if(match.recommended){response+=`   ⭐ Recommended: ${match.recommended.toUpperCase()}\\n`;}response+=`\\n`;});if(matchData.totalUpcoming>8){response+=`*...and ${matchData.totalUpcoming-8} more upcoming matches*\\n\\n`;}response+=\"🎯 **Best Betting Opportunities:**\\n\";const goodOddsMatches=upcomingMatches.filter(m=>m.odds&&(m.odds.home>1.8||m.odds.away>1.8));if(goodOddsMatches.length>0){goodOddsMatches.slice(0,3).forEach(match=>{var _match$homeTeam7,_match$awayTeam7;response+=`• **${(_match$homeTeam7=match.homeTeam)===null||_match$homeTeam7===void 0?void 0:_match$homeTeam7.name} vs ${(_match$awayTeam7=match.awayTeam)===null||_match$awayTeam7===void 0?void 0:_match$awayTeam7.name}** - Good value odds available\\n`;});}return response;}formatBettingInsightsResponse(matchData){let response=\"💰 **SMART BETTING ANALYSIS (Based on Current Data)**\\n\\n\";// Analyze live matches for in-play opportunities\nif(matchData.totalLive>0){response+=\"🔴 **Live Betting Opportunities:**\\n\";const liveMatches=matchData.liveMatches.slice(0,3);liveMatches.forEach(match=>{var _match$homeTeam8,_match$awayTeam8,_match$score7,_match$score8,_match$odds4,_match$odds5,_match$odds6;response+=`• **${(_match$homeTeam8=match.homeTeam)===null||_match$homeTeam8===void 0?void 0:_match$homeTeam8.name} vs ${(_match$awayTeam8=match.awayTeam)===null||_match$awayTeam8===void 0?void 0:_match$awayTeam8.name}** (${(_match$score7=match.score)===null||_match$score7===void 0?void 0:_match$score7.home}-${(_match$score8=match.score)===null||_match$score8===void 0?void 0:_match$score8.away}, ${match.elapsed}')\\n`;response+=`  Current odds: ${(_match$odds4=match.odds)===null||_match$odds4===void 0?void 0:_match$odds4.home}/${(_match$odds5=match.odds)===null||_match$odds5===void 0?void 0:_match$odds5.draw}/${(_match$odds6=match.odds)===null||_match$odds6===void 0?void 0:_match$odds6.away}\\n`;});response+=\"\\n\";}// Analyze upcoming matches for pre-match value\nif(matchData.totalUpcoming>0){response+=\"📅 **Pre-Match Value Bets:**\\n\";const valueMatches=matchData.upcomingMatches.filter(m=>m.odds&&m.recommended).slice(0,5);valueMatches.forEach(match=>{var _match$homeTeam9,_match$awayTeam9,_match$algorithm;response+=`• **${(_match$homeTeam9=match.homeTeam)===null||_match$homeTeam9===void 0?void 0:_match$homeTeam9.name} vs ${(_match$awayTeam9=match.awayTeam)===null||_match$awayTeam9===void 0?void 0:_match$awayTeam9.name}**\\n`;response+=`  📊 Recommended: ${match.recommended.toUpperCase()}\\n`;response+=`  💰 ${match.recommended} odds: ${match.odds[match.recommended]}\\n`;response+=`  📈 Algorithm confidence: ${(_match$algorithm=match.algorithm)===null||_match$algorithm===void 0?void 0:_match$algorithm.confidence}%\\n\\n`;});}response+=\"⚠️ **Risk Management Reminders:**\\n\";response+=\"• Never bet more than 2-3% of your bankroll per match\\n\";response+=\"• Track your predictions vs actual outcomes\\n\";response+=\"• Consider team news and injuries before betting\\n\";response+=\"• Use the odds and probabilities shown as guidance\\n\";return response;}formatSpecificMatchResponse(matchData,team1,team2){// Look for specific match in upcoming data with flexible matching\nconst specificMatch=matchData.upcomingMatches.find(match=>{var _match$homeTeam0,_match$awayTeam0;const homeTeam=(((_match$homeTeam0=match.homeTeam)===null||_match$homeTeam0===void 0?void 0:_match$homeTeam0.name)||'').toLowerCase();const awayTeam=(((_match$awayTeam0=match.awayTeam)===null||_match$awayTeam0===void 0?void 0:_match$awayTeam0.name)||'').toLowerCase();const t1=team1.toLowerCase();const t2=team2.toLowerCase();return homeTeam.includes(t1)&&awayTeam.includes(t2)||homeTeam.includes(t2)&&awayTeam.includes(t1)||homeTeam===t1&&awayTeam===t2||homeTeam===t2&&awayTeam===t1;});if(specificMatch){var _specificMatch$homeTe,_specificMatch$awayTe,_specificMatch$league,_specificMatch$league2;let response=`🔍 **MATCH ANALYSIS: ${(_specificMatch$homeTe=specificMatch.homeTeam)===null||_specificMatch$homeTe===void 0?void 0:_specificMatch$homeTe.name} vs ${(_specificMatch$awayTe=specificMatch.awayTeam)===null||_specificMatch$awayTe===void 0?void 0:_specificMatch$awayTe.name}**\\n\\n`;response+=`📅 **Match Details:**\\n`;response+=`• Date: ${specificMatch.date}\\n`;response+=`• Time: ${specificMatch.time}\\n`;response+=`• League: ${(_specificMatch$league=specificMatch.league)===null||_specificMatch$league===void 0?void 0:_specificMatch$league.name}\\n`;response+=`• Venue: ${specificMatch.venue||'TBA'}\\n\\n`;if(specificMatch.odds){var _specificMatch$homeTe2,_specificMatch$awayTe2,_specificMatch$probab,_specificMatch$probab2,_specificMatch$probab3;response+=`💰 **Betting Odds:**\\n`;response+=`• Home Win (${(_specificMatch$homeTe2=specificMatch.homeTeam)===null||_specificMatch$homeTe2===void 0?void 0:_specificMatch$homeTe2.name}): ${specificMatch.odds.home}\\n`;response+=`• Draw: ${specificMatch.odds.draw}\\n`;response+=`• Away Win (${(_specificMatch$awayTe2=specificMatch.awayTeam)===null||_specificMatch$awayTe2===void 0?void 0:_specificMatch$awayTe2.name}): ${specificMatch.odds.away}\\n\\n`;response+=`📊 **Probabilities:**\\n`;response+=`• Home: ${(_specificMatch$probab=specificMatch.probability)===null||_specificMatch$probab===void 0?void 0:_specificMatch$probab.home}\\n`;response+=`• Draw: ${(_specificMatch$probab2=specificMatch.probability)===null||_specificMatch$probab2===void 0?void 0:_specificMatch$probab2.draw}\\n`;response+=`• Away: ${(_specificMatch$probab3=specificMatch.probability)===null||_specificMatch$probab3===void 0?void 0:_specificMatch$probab3.away}\\n\\n`;}if(specificMatch.recommended){var _specificMatch$algori;response+=`⭐ **Our Algorithm Recommends:** ${specificMatch.recommended.toUpperCase()}\\n`;response+=`🎯 **Confidence Level:** ${(_specificMatch$algori=specificMatch.algorithm)===null||_specificMatch$algori===void 0?void 0:_specificMatch$algori.confidence}%\\n\\n`;}response+=`🎲 **Betting Markets Analysis:**\\n`;response+=`• **1X2 Market**: ${specificMatch.recommended?`Consider ${specificMatch.recommended.toUpperCase()} (${specificMatch.odds[specificMatch.recommended]} odds)`:'Analyze team form'}\\n`;response+=`• **Over/Under Goals**: With teams like these, consider Over 2.5 goals\\n`;response+=`• **Both Teams to Score**: High-quality attacking teams suggest BTTS Yes\\n`;response+=`• **Corners**: Possession-based teams typically generate more corner opportunities\\n\\n`;response+=`📈 **Recent Form Context:**\\n`;response+=`• Both teams are top-tier international sides\\n`;response+=`• ${(_specificMatch$league2=specificMatch.league)===null||_specificMatch$league2===void 0?void 0:_specificMatch$league2.name} - high-stakes competition\\n`;response+=`• Historical matchups between these teams are often tight\\n`;response+=`• Consider current squad form and injuries before betting\\n`;return response;}return`🔍 I couldn't find a specific match between ${team1} and ${team2} in the upcoming fixtures (next 7 days).\\n\\n📅 **Current Upcoming Matches:**\\n${this.formatUpcomingMatchesResponse(matchData)}`;}async findMatchDynamically(searchTerms){try{var _liveMatches$data,_upcomingMatches$data;const baseUrl=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Use both live matches and upcoming matches\nconst[liveMatches,upcomingMatches]=await Promise.all([axios.get(`${baseUrl}/matches/live`).catch(()=>({data:{result:[]}})),axios.get(`${baseUrl}/matches/upcoming`).catch(()=>({data:{result:[]}}))]);const allMatches=[...(Array.isArray((_liveMatches$data=liveMatches.data)===null||_liveMatches$data===void 0?void 0:_liveMatches$data.result)?liveMatches.data.result:[]),...(Array.isArray((_upcomingMatches$data=upcomingMatches.data)===null||_upcomingMatches$data===void 0?void 0:_upcomingMatches$data.result)?upcomingMatches.data.result:[])];if(allMatches.length===0){console.log('No matches available');return null;}// Normalize search terms\nconst normalizedSearchTerms=searchTerms.map(term=>this.normalizeTeamName(term));// Look for exact matches first\nconst exactMatch=allMatches.find(match=>{var _match$homeTeam1,_match$awayTeam1;const homeTeam=this.normalizeTeamName(((_match$homeTeam1=match.homeTeam)===null||_match$homeTeam1===void 0?void 0:_match$homeTeam1.name)||'');const awayTeam=this.normalizeTeamName(((_match$awayTeam1=match.awayTeam)===null||_match$awayTeam1===void 0?void 0:_match$awayTeam1.name)||'');return normalizedSearchTerms[0]===homeTeam&&normalizedSearchTerms[1]===awayTeam||normalizedSearchTerms[0]===awayTeam&&normalizedSearchTerms[1]===homeTeam;});if(exactMatch){return exactMatch;}// If no exact match, try fuzzy matching\nlet bestMatch=null;let bestScore=0;allMatches.forEach(match=>{var _match$homeTeam10,_match$awayTeam10;const homeTeam=((_match$homeTeam10=match.homeTeam)===null||_match$homeTeam10===void 0?void 0:_match$homeTeam10.name)||'';const awayTeam=((_match$awayTeam10=match.awayTeam)===null||_match$awayTeam10===void 0?void 0:_match$awayTeam10.name)||'';const score1=Math.max(this.calculateSimilarity(searchTerms[0],homeTeam),this.calculateSimilarity(searchTerms[0],awayTeam));const score2=searchTerms[1]?Math.max(this.calculateSimilarity(searchTerms[1],homeTeam),this.calculateSimilarity(searchTerms[1],awayTeam)):1;const combinedScore=score1*score2;if(combinedScore>bestScore){bestScore=combinedScore;bestMatch=match;}});return bestScore>0.7?bestMatch:null;}catch(error){console.error('Error in findMatchDynamically:',error);return null;}}calculateSimilarity(term1,term2){// Normalize both terms\nconst s1=this.normalizeTeamName(term1);const s2=this.normalizeTeamName(term2);// Quick exact match check\nif(s1===s2)return 1;// Handle one term containing the other\nif(s1.includes(s2)||s2.includes(s1))return 0.9;// Handle common variations\nconst variations1=this.getTeamNameVariations(s1);const variations2=this.getTeamNameVariations(s2);for(const v1 of variations1){for(const v2 of variations2){if(v1===v2)return 0.95;}}// Calculate Levenshtein distance\nconst distance=this.levenshteinDistance(s1,s2);const maxLength=Math.max(s1.length,s2.length);// Convert distance to similarity score (0-1)\nconst score=1-distance/maxLength;return score;}getTeamNameVariations(name){const variations=[name];// Common country name variations\nconst countryMap={'spain':['spain','espana','española','espagne'],'france':['france','francia','frankreich']};// Add country variations\nfor(const[key,values]of Object.entries(countryMap)){if(values.includes(name)){variations.push(...values);}}return variations;}levenshteinDistance(str1,str2){const m=str1.length;const n=str2.length;const dp=Array(m+1).fill(null).map(()=>Array(n+1).fill(0));for(let i=0;i<=m;i++)dp[i][0]=i;for(let j=0;j<=n;j++)dp[0][j]=j;for(let i=1;i<=m;i++){for(let j=1;j<=n;j++){if(str1[i-1]===str2[j-1]){dp[i][j]=dp[i-1][j-1];}else{dp[i][j]=Math.min(dp[i-1][j-1]+1,// substitution\ndp[i-1][j]+1,// deletion\ndp[i][j-1]+1// insertion\n);}}}return dp[m][n];}normalizeTeamName(name){return name.toLowerCase().replace(/\\s+/g,' ').trim()// Remove common suffixes\n.replace(/\\s+fc$|\\s+f\\.c\\.$|\\s+cf$|\\s+afc$/,'').replace(/\\s+united$|\\s+utd$/,'').replace(/\\s+city$/,'')// Remove accents and special characters\n.normalize('NFD').replace(/[\\u0300-\\u036f]/g,'').replace(/[^\\w\\s-]/g,'')// Remove gender/age indicators\n.replace(/\\s+[wu]\\d*$|\\s+women$|\\s+w$/,'').replace(/\\s+reserves$|\\s+res$/,'').trim();}findBestMatch(searchTerm,candidates){const normalizedSearch=this.normalizeTeamName(searchTerm);let bestMatch=null;let bestScore=0;for(const candidate of candidates){const normalizedCandidate=this.normalizeTeamName(candidate);const score=this.calculateSimilarity(normalizedSearch,normalizedCandidate);// Adjust threshold based on term length\nconst threshold=normalizedSearch.length<=4?0.85:0.7;if(score>bestScore&&score>=threshold){bestScore=score;bestMatch=candidate;}}return bestMatch;}async getDetailedMatchAnalysis(matchId){try{var _matchDetails$data,_h2h$data,_corners$data,_btts$data,_cards$data,_analysis$data,_matchData$homeTeam,_matchData$awayTeam;const baseUrl=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Get comprehensive match data\nconst[matchDetails,h2h,corners,btts,cards,analysis]=await Promise.all([axios.get(`${baseUrl}/matches/${matchId}`).catch(()=>({data:null})),axios.get(`${baseUrl}/matches/${matchId}/h2h`).catch(()=>({data:null})),axios.get(`${baseUrl}/matches/${matchId}/corners`).catch(()=>({data:null})),axios.get(`${baseUrl}/matches/${matchId}/btts`).catch(()=>({data:null})),axios.get(`${baseUrl}/matches/${matchId}/cards`).catch(()=>({data:null})),axios.get(`${baseUrl}/matches/${matchId}/analysis`).catch(()=>({data:null}))]);// Extract data, handling the possible nested 'result' structure\nconst matchData=((_matchDetails$data=matchDetails.data)===null||_matchDetails$data===void 0?void 0:_matchDetails$data.result)||matchDetails.data;const h2hData=((_h2h$data=h2h.data)===null||_h2h$data===void 0?void 0:_h2h$data.result)||h2h.data;const cornersData=((_corners$data=corners.data)===null||_corners$data===void 0?void 0:_corners$data.result)||corners.data;const bttsData=((_btts$data=btts.data)===null||_btts$data===void 0?void 0:_btts$data.result)||btts.data;const cardsData=((_cards$data=cards.data)===null||_cards$data===void 0?void 0:_cards$data.result)||cards.data;const analysisData=((_analysis$data=analysis.data)===null||_analysis$data===void 0?void 0:_analysis$data.result)||analysis.data;// Get team form if we have team IDs\nlet teamForm={home:null,away:null};if(matchData!==null&&matchData!==void 0&&(_matchData$homeTeam=matchData.homeTeam)!==null&&_matchData$homeTeam!==void 0&&_matchData$homeTeam.id&&matchData!==null&&matchData!==void 0&&(_matchData$awayTeam=matchData.awayTeam)!==null&&_matchData$awayTeam!==void 0&&_matchData$awayTeam.id){var _homeForm$data,_awayForm$data;const[homeForm,awayForm]=await Promise.all([axios.get(`${baseUrl}/teams/${matchData.homeTeam.id}/form`).catch(()=>({data:null})),axios.get(`${baseUrl}/teams/${matchData.awayTeam.id}/form`).catch(()=>({data:null}))]);teamForm={home:((_homeForm$data=homeForm.data)===null||_homeForm$data===void 0?void 0:_homeForm$data.result)||homeForm.data,away:((_awayForm$data=awayForm.data)===null||_awayForm$data===void 0?void 0:_awayForm$data.result)||awayForm.data};}return{matchDetails:matchData,h2h:h2hData,corners:cornersData,btts:bttsData,cards:cardsData,analysis:analysisData,teamForm};}catch(error){console.error('Error getting detailed match analysis:',error);return null;}}formatComprehensiveMatchAnalysis(match,detailedData){var _match$homeTeam11,_match$awayTeam11,_match$league5,_match$rawData,_match$rawData2,_detailedData$btts,_detailedData$btts$re,_detailedData$btts2,_detailedData$btts2$r,_detailedData$corners,_detailedData$corners2,_detailedData$cards,_detailedData$cards$p;let response=`🔍 **COMPREHENSIVE MATCH ANALYSIS**\\n`;response+=`**${(_match$homeTeam11=match.homeTeam)===null||_match$homeTeam11===void 0?void 0:_match$homeTeam11.name} vs ${(_match$awayTeam11=match.awayTeam)===null||_match$awayTeam11===void 0?void 0:_match$awayTeam11.name}**\\n\\n`;// Basic match info with tournament context\nresponse+=`📅 **Match Details:**\\n`;response+=`• Date: ${match.date} at ${match.time}\\n`;response+=`• Competition: ${(_match$league5=match.league)===null||_match$league5===void 0?void 0:_match$league5.name}\\n`;response+=`• Round: ${((_match$rawData=match.rawData)===null||_match$rawData===void 0?void 0:_match$rawData.league_round)||'Semi-finals'}\\n`;response+=`• Venue: ${match.venue||'TBA'}\\n`;response+=`• Referee: ${((_match$rawData2=match.rawData)===null||_match$rawData2===void 0?void 0:_match$rawData2.event_referee)||'TBA'}\\n`;response+=`• Tournament Importance: Semi-final of UEFA Nations League (High Stakes)\\n`;if(match.status==='LIVE'){var _match$score9,_match$score0;response+=`• Status: 🔴 LIVE (${match.elapsed}')\\n`;response+=`• Current Score: ${(_match$score9=match.score)===null||_match$score9===void 0?void 0:_match$score9.home} - ${(_match$score0=match.score)===null||_match$score0===void 0?void 0:_match$score0.away}\\n`;}response+=`\\n`;// Betting odds and recommendations with reasoning\nif(match.odds){var _match$homeTeam12,_match$awayTeam12;response+=`💰 **Betting Analysis:**\\n`;response+=`• Home Win (${(_match$homeTeam12=match.homeTeam)===null||_match$homeTeam12===void 0?void 0:_match$homeTeam12.name}): ${match.odds.home} - Implied Prob: ${Math.round(1/match.odds.home*100)}%\\n`;response+=`• Draw: ${match.odds.draw} - Implied Prob: ${Math.round(1/match.odds.draw*100)}%\\n`;response+=`• Away Win (${(_match$awayTeam12=match.awayTeam)===null||_match$awayTeam12===void 0?void 0:_match$awayTeam12.name}): ${match.odds.away} - Implied Prob: ${Math.round(1/match.odds.away*100)}%\\n`;if(match.probability){response+=`• Model Probabilities: ${match.probability.home} / ${match.probability.draw} / ${match.probability.away}\\n`;// Calculate value\nconst homeValue=parseFloat(match.probability.home)/100*match.odds.home;const drawValue=parseFloat(match.probability.draw)/100*match.odds.draw;const awayValue=parseFloat(match.probability.away)/100*match.odds.away;if(homeValue>1.1||drawValue>1.1||awayValue>1.1){response+=`• Value Found: ${homeValue>1.1?'Home ':''}${drawValue>1.1?'Draw ':''}${awayValue>1.1?'Away':''}\\n`;}}if(match.recommended){var _match$algorithm2;response+=`• ⭐ **Recommended Bet**: ${match.recommended.toUpperCase()}\\n`;response+=`• 🎯 **Confidence**: ${(_match$algorithm2=match.algorithm)===null||_match$algorithm2===void 0?void 0:_match$algorithm2.confidence}%\\n`;response+=`• 📊 **Reasoning**: High confidence based on current form, H2H record, and odds value\\n`;}response+=`\\n`;}// Detailed analysis from backend\nif(detailedData){// Team Form\nif(detailedData.teamForm.home||detailedData.teamForm.away){response+=`📈 **Recent Team Form:**\\n`;if(detailedData.teamForm.home){var _match$homeTeam13;const homeForm=detailedData.teamForm.home;response+=`• **${(_match$homeTeam13=match.homeTeam)===null||_match$homeTeam13===void 0?void 0:_match$homeTeam13.name}**: ${homeForm.recentForm||''}\\n`;if(homeForm.lastMatches){const lastResults=Array.isArray(homeForm.lastMatches)?homeForm.lastMatches.slice(0,5).map(m=>`${m.result||m.outcome||'?'} vs ${m.opponent||'Unknown'}`).join(', '):'Recent matches data available';response+=`  Last 5: ${lastResults}\\n`;}if(homeForm.stats){response+=`  Goals scored/conceded: ${homeForm.stats.goalsScored||'?'}/${homeForm.stats.goalsConceded||'?'}\\n`;}}if(detailedData.teamForm.away){var _match$awayTeam13;const awayForm=detailedData.teamForm.away;response+=`• **${(_match$awayTeam13=match.awayTeam)===null||_match$awayTeam13===void 0?void 0:_match$awayTeam13.name}**: ${awayForm.recentForm||''}\\n`;if(awayForm.lastMatches){const lastResults=Array.isArray(awayForm.lastMatches)?awayForm.lastMatches.slice(0,5).map(m=>`${m.result||m.outcome||'?'} vs ${m.opponent||'Unknown'}`).join(', '):'Recent matches data available';response+=`  Last 5: ${lastResults}\\n`;}if(awayForm.stats){response+=`  Goals scored/conceded: ${awayForm.stats.goalsScored||'?'}/${awayForm.stats.goalsConceded||'?'}\\n`;}}response+=`\\n`;}// Head-to-Head with detailed stats\nif(detailedData.h2h){response+=`🏆 **Head-to-Head Analysis:**\\n`;if(Array.isArray(detailedData.h2h)){var _match$homeTeam16,_match$awayTeam16;const totalMatches=detailedData.h2h.length;const homeWins=detailedData.h2h.filter(m=>{var _match$homeTeam14,_match$homeTeam15;return m.winner===((_match$homeTeam14=match.homeTeam)===null||_match$homeTeam14===void 0?void 0:_match$homeTeam14.name)||m.winner===((_match$homeTeam15=match.homeTeam)===null||_match$homeTeam15===void 0?void 0:_match$homeTeam15.id);}).length;const awayWins=detailedData.h2h.filter(m=>{var _match$awayTeam14,_match$awayTeam15;return m.winner===((_match$awayTeam14=match.awayTeam)===null||_match$awayTeam14===void 0?void 0:_match$awayTeam14.name)||m.winner===((_match$awayTeam15=match.awayTeam)===null||_match$awayTeam15===void 0?void 0:_match$awayTeam15.id);}).length;const draws=detailedData.h2h.filter(m=>m.winner==='draw'||m.result==='draw').length;// Calculate H2H stats\nconst totalGoals=detailedData.h2h.reduce((sum,m)=>sum+(parseInt(m.homeScore)||0)+(parseInt(m.awayScore)||0),0);const avgGoals=totalGoals/totalMatches;const bttsCount=detailedData.h2h.filter(m=>parseInt(m.homeScore)>0&&parseInt(m.awayScore)>0).length;const bttsPercentage=Math.round(bttsCount/totalMatches*100);response+=`• Overall Record: ${(_match$homeTeam16=match.homeTeam)===null||_match$homeTeam16===void 0?void 0:_match$homeTeam16.name} ${homeWins} - ${draws} - ${awayWins} ${(_match$awayTeam16=match.awayTeam)===null||_match$awayTeam16===void 0?void 0:_match$awayTeam16.name}\\n`;response+=`• Win Percentages: ${Math.round(homeWins/totalMatches*100)}% / ${Math.round(draws/totalMatches*100)}% / ${Math.round(awayWins/totalMatches*100)}%\\n`;response+=`• Average Goals per Match: ${avgGoals.toFixed(2)}\\n`;response+=`• Both Teams Scored: ${bttsPercentage}% of matches\\n\\n`;response+=`• Recent H2H Results:\\n`;const recentMatches=detailedData.h2h.slice(0,3);recentMatches.forEach(m=>{response+=`  ${m.date||'Unknown'}: ${m.homeTeam||'?'} ${m.homeScore||'?'}-${m.awayScore||'?'} ${m.awayTeam||'?'}\\n`;if(m.competition)response+=`  (${m.competition})\\n`;});}else{response+=`• Historical performance data available\\n`;response+=`• Statistical trends and patterns analyzed\\n`;}response+=`\\n`;}// Corners Analysis\nif(detailedData.corners){var _corners$cornerProbab;response+=`🚩 **Corners Analysis & Betting Markets:**\\n`;const corners=detailedData.corners;// Expected Totals\nif(corners.cornerProbabilities){const{expectedTotal,expectedHome,expectedAway}=corners.cornerProbabilities;response+=`• **Expected Total Corners:** ${(expectedTotal===null||expectedTotal===void 0?void 0:expectedTotal.toFixed(1))||'?'}\\n`;response+=`• **Expected Home:** ${(expectedHome===null||expectedHome===void 0?void 0:expectedHome.toFixed(1))||'?'} | **Away:** ${(expectedAway===null||expectedAway===void 0?void 0:expectedAway.toFixed(1))||'?'}\\n\\n`;}// Over/Under Betting Lines with Probabilities\nif(corners.overUnderPredictions){response+=`📊 **Over/Under Markets:**\\n`;const predictions=corners.overUnderPredictions;// Sort lines for better presentation\nconst sortedLines=Object.keys(predictions).filter(key=>key.includes('.5')).sort((a,b)=>parseFloat(a)-parseFloat(b));for(const lineKey of sortedLines){const pred=predictions[lineKey];if(pred&&pred.line){const confidence=pred.confidence||this.getConfidenceFromProbability(pred.overProbability);const emoji=this.getRecommendationEmoji(pred.recommendation);response+=`• **O/U ${pred.line}:** ${emoji} **${pred.recommendation}** (${(pred.overProbability*100).toFixed(1)}% over) - ${confidence}\\n`;if(pred.historicalOverRate){response+=`  └ Historical over rate: ${(pred.historicalOverRate*100).toFixed(1)}%\\n`;}}}response+=`\\n`;}// Team Corner Statistics\nif(corners.homeStats&&corners.awayStats){var _match$homeTeam17,_corners$homeStats$av,_match$awayTeam17,_corners$awayStats$av;response+=`📈 **Team Corner Stats:**\\n`;response+=`• **${((_match$homeTeam17=match.homeTeam)===null||_match$homeTeam17===void 0?void 0:_match$homeTeam17.name)||'Home'}:** ${((_corners$homeStats$av=corners.homeStats.averageCorners)===null||_corners$homeStats$av===void 0?void 0:_corners$homeStats$av.toFixed(1))||'?'} avg (${corners.homeStats.matchesAnalyzed||'?'} matches)\\n`;response+=`• **${((_match$awayTeam17=match.awayTeam)===null||_match$awayTeam17===void 0?void 0:_match$awayTeam17.name)||'Away'}:** ${((_corners$awayStats$av=corners.awayStats.averageCorners)===null||_corners$awayStats$av===void 0?void 0:_corners$awayStats$av.toFixed(1))||'?'} avg (${corners.awayStats.matchesAnalyzed||'?'} matches)\\n`;// Home/Away advantages\nif(corners.homeStats.homeAdvantage||corners.awayStats.awayAdvantage){var _corners$homeStats$ho,_corners$awayStats$aw;response+=`• **Home Advantage:** ${corners.homeStats.homeAdvantage>0?'+':''}${((_corners$homeStats$ho=corners.homeStats.homeAdvantage)===null||_corners$homeStats$ho===void 0?void 0:_corners$homeStats$ho.toFixed(1))||'0'} corners\\n`;response+=`• **Away Form:** ${corners.awayStats.awayAdvantage>0?'+':''}${((_corners$awayStats$aw=corners.awayStats.awayAdvantage)===null||_corners$awayStats$aw===void 0?void 0:_corners$awayStats$aw.toFixed(1))||'0'} corners vs avg\\n`;}response+=`\\n`;}// Corner Probability Ranges\nif((_corners$cornerProbab=corners.cornerProbabilities)!==null&&_corners$cornerProbab!==void 0&&_corners$cornerProbab.totalRanges){response+=`🎯 **Most Likely Outcomes:**\\n`;const topRanges=corners.cornerProbabilities.totalRanges.sort((a,b)=>b.probability-a.probability).slice(0,3);topRanges.forEach((range,index)=>{response+=`${index+1}. **${range.range} corners:** ${(range.probability*100).toFixed(1)}% chance\\n`;});response+=`\\n`;}// Legacy prediction support\nif(corners.prediction&&!corners.overUnderPredictions){response+=`• **Quick Prediction:** ${corners.prediction.total||'Under analysis'}\\n`;if(corners.prediction.over9_5!==undefined){response+=`• **Over/Under 9.5:** ${corners.prediction.over9_5?'Over recommended':'Under recommended'}\\n`;}response+=`\\n`;}}// Goals Analysis (BTTS)\nif(detailedData.btts){var _match$homeTeam18,_btts$goalTiming,_match$awayTeam18,_btts$goalTiming2;response+=`⚽ **Goals Analysis:**\\n`;const btts=detailedData.btts;if(btts.bttsStats){response+=`• **Both Teams to Score:** ${btts.bttsStats.bttsRate||btts.bttsStats.rate||'?'}% probability\\n`;response+=`• **Over 2.5 Goals:** ${btts.bttsStats.over25Rate||btts.bttsStats.o25Rate||'?'}% probability\\n`;}if(btts.recommendation){response+=`• **BTTS Recommendation:** ${btts.recommendation.btts||'Under analysis'}\\n`;response+=`• **O/U Recommendation:** ${btts.recommendation.overUnder||'Under analysis'}\\n`;}response+=`• **Goal Timing:** ${(_match$homeTeam18=match.homeTeam)===null||_match$homeTeam18===void 0?void 0:_match$homeTeam18.name} tends to score ${((_btts$goalTiming=btts.goalTiming)===null||_btts$goalTiming===void 0?void 0:_btts$goalTiming.home)||'throughout the match'}\\n`;response+=`• **Goal Timing:** ${(_match$awayTeam18=match.awayTeam)===null||_match$awayTeam18===void 0?void 0:_match$awayTeam18.name} tends to score ${((_btts$goalTiming2=btts.goalTiming)===null||_btts$goalTiming2===void 0?void 0:_btts$goalTiming2.away)||'throughout the match'}\\n`;response+=`\\n`;}// Cards Analysis\nif(detailedData.cards){response+=`🟨 **Cards Analysis:**\\n`;const cards=detailedData.cards;if(cards.cardStats){var _match$homeTeam19,_cards$cardStats$home,_match$awayTeam19,_cards$cardStats$away;response+=`• **Average Cards:** ${cards.cardStats.avgTotal||'?'} per match\\n`;response+=`• **${(_match$homeTeam19=match.homeTeam)===null||_match$homeTeam19===void 0?void 0:_match$homeTeam19.name} Avg:** ${((_cards$cardStats$home=cards.cardStats.home)===null||_cards$cardStats$home===void 0?void 0:_cards$cardStats$home.avg)||'?'} cards\\n`;response+=`• **${(_match$awayTeam19=match.awayTeam)===null||_match$awayTeam19===void 0?void 0:_match$awayTeam19.name} Avg:** ${((_cards$cardStats$away=cards.cardStats.away)===null||_cards$cardStats$away===void 0?void 0:_cards$cardStats$away.avg)||'?'} cards\\n`;}if(cards.prediction){response+=`• **Cards Prediction:** ${cards.prediction.total||'Under analysis'}\\n`;response+=`• **Over/Under 3.5:** ${cards.prediction.over3_5?'Over looks likely':'Under looks likely'}\\n`;}if(cards.referee){response+=`• **Referee:** ${cards.referee.name||'TBA'} - Avg ${cards.referee.cardsPerMatch||'?'} cards per match\\n`;}response+=`\\n`;}}// Strategic insights\nresponse+=`🎯 **Key Betting Markets:**\\n`;response+=`• **1X2 Market**: ${match.recommended?`Consider ${match.recommended.toUpperCase()}`:'Analyze odds value'}\\n`;response+=`• **Over/Under Goals**: ${(detailedData===null||detailedData===void 0?void 0:(_detailedData$btts=detailedData.btts)===null||_detailedData$btts===void 0?void 0:(_detailedData$btts$re=_detailedData$btts.recommendation)===null||_detailedData$btts$re===void 0?void 0:_detailedData$btts$re.overUnder)||'Check team scoring averages and defensive records'}\\n`;response+=`• **Both Teams to Score**: ${(detailedData===null||detailedData===void 0?void 0:(_detailedData$btts2=detailedData.btts)===null||_detailedData$btts2===void 0?void 0:(_detailedData$btts2$r=_detailedData$btts2.recommendation)===null||_detailedData$btts2$r===void 0?void 0:_detailedData$btts2$r.btts)||'Evaluate attacking strength vs defensive weaknesses'}\\n`;response+=`• **Corners**: ${(detailedData===null||detailedData===void 0?void 0:(_detailedData$corners=detailedData.corners)===null||_detailedData$corners===void 0?void 0:(_detailedData$corners2=_detailedData$corners.prediction)===null||_detailedData$corners2===void 0?void 0:_detailedData$corners2.recommendation)||'Consider playing styles (possession vs counter-attack)'}\\n`;response+=`• **Cards**: ${(detailedData===null||detailedData===void 0?void 0:(_detailedData$cards=detailedData.cards)===null||_detailedData$cards===void 0?void 0:(_detailedData$cards$p=_detailedData$cards.prediction)===null||_detailedData$cards$p===void 0?void 0:_detailedData$cards$p.recommendation)||'Factor in referee strictness and team discipline records'}\\n\\n`;response+=`⚠️ **Risk Considerations:**\\n`;response+=`• Team news and injuries (check latest updates)\\n`;response+=`• Weather conditions and pitch quality\\n`;response+=`• Motivation levels (tournament importance, league position)\\n`;response+=`• Recent form momentum and confidence\\n`;return response;}isValidTeamName(name){if(!name||name.length<2)return false;// Filter out common words that might be mistaken for team names\nconst commonWords=['match','game','team','versus','against','between','analysis','statistics','odds','betting','prediction','today','tomorrow','yesterday','please','thanks','give','show','tell','about','what','when','where','who','why','how','the','and','for'];const normalizedName=this.normalizeTeamName(name);if(commonWords.includes(normalizedName)){return false;}// Check that the name doesn't contain common question words or phrases\nconst questionPhrases=['what is','how to','can you','will you','should i','do you'];for(const phrase of questionPhrases){if(normalizedName.includes(phrase)){return false;}}// Check if it's likely a team name by checking for common team name patterns\nconst teamPatterns=[/^[a-z]+$/i,// Single word (e.g., Arsenal)\n/^[a-z]+\\s+[a-z]+$/i,// Two words (e.g., Real Madrid)\n/^[a-z]+\\s+[a-z]+\\s+[a-z]+$/i,// Three words (e.g., Red Bull Leipzig)\n/^[a-z\\s\\-]+$/i,// Words with hyphens (e.g., Wolverhampton Wanderers)\n/^[a-z\\s\\.]+$/i// Words with periods (e.g., F.C. Barcelona)\n];return teamPatterns.some(pattern=>pattern.test(name));}// Helper methods for corner analysis formatting\ngetConfidenceFromProbability(probability){if(probability>=0.7)return'HIGH';if(probability>=0.5)return'MEDIUM';return'LOW';}getRecommendationEmoji(recommendation){switch(recommendation===null||recommendation===void 0?void 0:recommendation.toUpperCase()){case'OVER':return'📈';case'UNDER':return'📉';case'PUSH':return'🟡';default:return'🎯';}}}export const chatService=new ChatService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}